// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OuiSplitButton is rendered 1`] = `
<div
  class="ouiPopover ouiPopover--anchorDownRight ouiSplitButton"
>
  <div
    class="ouiPopover__anchor"
  >
    <div
      class="ouiSplitButtonControl ouiSplitButtonColor--primary"
    >
      <button
        class="ouiButton ouiButton--primary ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
        data-test-subj="splitButton--primary"
        type="button"
      >
        <span
          class="ouiButtonContent ouiButton__content"
        >
          <span
            class="ouiButton__text"
          >
            Test
          </span>
        </span>
      </button>
      <button
        aria-label="Open Selections"
        class="ouiButtonIcon ouiButtonIcon--primary ouiButtonIcon--medium ouiSplitButtonControl--dropdown"
        data-test-subj="splitButton--dropdown"
        type="button"
      >
        <span
          aria-hidden="true"
          class="ouiButtonIcon__icon"
          color="inherit"
          data-ouiicon-type="arrowDown"
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`OuiSplitButton onClick events selection list is opened on drop-down button click 1`] = `
<OuiSplitButton
  options={
    Array [
      Object {
        "display": "Option #1",
        "href": "#",
      },
      Object {
        "display": "Option #2",
      },
    ]
  }
  selectedIndex={1}
>
  <OuiPopover
    anchorPosition="downRight"
    button={
      <OuiSplitButtonControl
        className="ouiSplitButton--isOpen__button"
        color="primary"
        fullWidth={false}
        onClick={[Function]}
        onDropdownClick={[Function]}
        onKeyDown={[Function]}
      >
        Test
      </OuiSplitButtonControl>
    }
    className="ouiSplitButton"
    closePopover={[Function]}
    display="inlineBlock"
    hasArrow={false}
    isOpen={true}
    ownFocus={false}
    panelPaddingSize="none"
    panelRef={[Function]}
  >
    <OuiOutsideClickDetector
      onOutsideClick={[Function]}
    >
      <div
        className="ouiPopover ouiPopover--anchorDownRight ouiSplitButton"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
      >
        <div
          className="ouiPopover__anchor"
        >
          <OuiSplitButtonControl
            className="ouiSplitButton--isOpen__button"
            color="primary"
            fullWidth={false}
            onClick={[Function]}
            onDropdownClick={[Function]}
            onKeyDown={[Function]}
          >
            <div
              className="ouiSplitButtonControl ouiSplitButtonColor--primary"
            >
              <OuiButton
                className="ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                color="primary"
                data-test-subj="splitButton--primary"
                fullWidth={false}
                isDisabled={false}
                onClick={[Function]}
                onKeyDown={[Function]}
              >
                <OuiButtonDisplay
                  baseClassName="ouiButton"
                  className="ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                  color="primary"
                  data-test-subj="splitButton--primary"
                  disabled={false}
                  element="button"
                  fullWidth={false}
                  isDisabled={false}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <button
                    className="ouiButton ouiButton--primary ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                    data-test-subj="splitButton--primary"
                    disabled={false}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    style={
                      Object {
                        "minWidth": undefined,
                      }
                    }
                    type="button"
                  >
                    <OuiButtonContent
                      className="ouiButton__content"
                      iconSide="left"
                      textProps={
                        Object {
                          "className": "ouiButton__text",
                        }
                      }
                    >
                      <span
                        className="ouiButtonContent ouiButton__content"
                      >
                        <span
                          className="ouiButton__text"
                        >
                          Test
                        </span>
                      </span>
                    </OuiButtonContent>
                  </button>
                </OuiButtonDisplay>
              </OuiButton>
              <OuiButtonIcon
                aria-label="Open Selections"
                className="ouiSplitButtonControl--dropdown"
                color="primary"
                data-test-subj="splitButton--dropdown"
                disabled={false}
                display="base"
                iconType="arrowDown"
                isDisabled={false}
                onClick={[Function]}
                onKeyDown={[Function]}
                size="m"
              >
                <button
                  aria-label="Open Selections"
                  className="ouiButtonIcon ouiButtonIcon--primary ouiButtonIcon--medium ouiSplitButtonControl--dropdown"
                  data-test-subj="splitButton--dropdown"
                  disabled={false}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <OuiIcon
                    aria-hidden="true"
                    className="ouiButtonIcon__icon"
                    color="inherit"
                    size="m"
                    type="arrowDown"
                  >
                    <span
                      aria-hidden="true"
                      className="ouiButtonIcon__icon"
                      color="inherit"
                      data-ouiicon-type="arrowDown"
                      size="m"
                    />
                  </OuiIcon>
                </button>
              </OuiButtonIcon>
            </div>
          </OuiSplitButtonControl>
        </div>
        <OuiPortal>
          <OuiFocusTrap
            clickOutsideDisables={true}
            disabled={true}
            noIsolation={true}
            onClickOutside={[Function]}
            onEscapeKey={[Function]}
            returnFocus={false}
            scrollLock={false}
          >
            <ForwardRef
              enabled={false}
              noIsolation={true}
              onClickOutside={[Function]}
              onEscapeKey={[Function]}
              returnFocus={false}
              scrollLock={false}
            >
              <ForwardRef
                enabled={false}
                noIsolation={true}
                onClickOutside={[Function]}
                onEscapeKey={[Function]}
                returnFocus={false}
                scrollLock={false}
                sideCar={[Function]}
              >
                <ForwardRef
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "classNames": Object {
                        "fullWidth": "width-before-scroll-bar",
                        "zeroRight": "right-scroll-bar-position",
                      },
                      "defaultProps": Object {
                        "enabled": true,
                        "inert": false,
                        "removeScrollBar": true,
                      },
                      "render": [Function],
                    }
                  }
                  autoFocus={true}
                  crossFrame={true}
                  disabled={true}
                  lockProps={
                    Object {
                      "allowPinchZoom": undefined,
                      "as": undefined,
                      "enabled": false,
                      "inert": undefined,
                      "shards": undefined,
                      "sideCar": [Function],
                      "style": undefined,
                    }
                  }
                  noFocusGuards={false}
                  persistentFocus={false}
                  returnFocus={false}
                  sideCar={[Function]}
                >
                  <div
                    data-focus-guard={true}
                    key="guard-first"
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                  <div
                    data-focus-guard={true}
                    key="guard-nearest"
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                  <ForwardRef
                    data-focus-lock-disabled="disabled"
                    enabled={false}
                    inert={false}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    removeScrollBar={true}
                    sideCar={[Function]}
                  >
                    <div
                      data-focus-lock-disabled="disabled"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onScrollCapture={[Function]}
                      onTouchMoveCapture={[Function]}
                      onWheelCapture={[Function]}
                    >
                      <OuiPanel
                        aria-live="assertive"
                        aria-modal="true"
                        className="ouiPopover__panel ouiPopover__panel--bottom ouiPopover__panel-noArrow"
                        hasShadow={false}
                        paddingSize="none"
                        panelRef={[Function]}
                        role="dialog"
                        style={
                          Object {
                            "left": -22,
                            "top": 8,
                            "willChange": "transform, opacity",
                            "zIndex": 2000,
                          }
                        }
                      >
                        <div
                          aria-live="assertive"
                          aria-modal="true"
                          className="ouiPanel ouiPanel--borderRadiusMedium ouiPanel--plain ouiPanel--noShadow ouiPopover__panel ouiPopover__panel--bottom ouiPopover__panel-noArrow"
                          role="dialog"
                          style={
                            Object {
                              "left": -22,
                              "top": 8,
                              "willChange": "transform, opacity",
                              "zIndex": 2000,
                            }
                          }
                        >
                          <div
                            className="ouiPopover__panelArrow ouiPopover__panelArrow--bottom"
                          />
                          <OuiMutationObserver
                            observerOptions={
                              Object {
                                "attributes": true,
                                "characterData": true,
                                "childList": true,
                                "subtree": true,
                              }
                            }
                            onMutation={[Function]}
                          >
                            <div>
                              <OuiScreenReaderOnly>
                                <p
                                  className="ouiScreenReaderOnly"
                                  role="alert"
                                >
                                  <OuiI18n
                                    default="You are in a selector of {optionsCount} items and must select a single option. Use the up and down keys to navigate or escape to close."
                                    token="ouiSplitButton.screenReaderAnnouncement"
                                    values={
                                      Object {
                                        "optionsCount": 2,
                                      }
                                    }
                                  >
                                    You are in a selector of 2 items and must select a single option. Use the up and down keys to navigate or escape to close.
                                  </OuiI18n>
                                </p>
                              </OuiScreenReaderOnly>
                              <OuiFocusTrap
                                clickOutsideDisables={true}
                                disabled={false}
                                noIsolation={true}
                                returnFocus={true}
                                scrollLock={false}
                              >
                                <ForwardRef
                                  enabled={true}
                                  noIsolation={true}
                                  onClickOutside={[Function]}
                                  returnFocus={true}
                                  scrollLock={false}
                                >
                                  <ForwardRef
                                    enabled={true}
                                    noIsolation={true}
                                    onClickOutside={[Function]}
                                    returnFocus={true}
                                    scrollLock={false}
                                    sideCar={[Function]}
                                  >
                                    <ForwardRef
                                      as={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "classNames": Object {
                                            "fullWidth": "width-before-scroll-bar",
                                            "zeroRight": "right-scroll-bar-position",
                                          },
                                          "defaultProps": Object {
                                            "enabled": true,
                                            "inert": false,
                                            "removeScrollBar": true,
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      autoFocus={true}
                                      crossFrame={true}
                                      disabled={false}
                                      lockProps={
                                        Object {
                                          "allowPinchZoom": undefined,
                                          "as": undefined,
                                          "enabled": false,
                                          "inert": undefined,
                                          "onMouseDown": [Function],
                                          "onTouchStart": [Function],
                                          "shards": undefined,
                                          "sideCar": [Function],
                                          "style": undefined,
                                        }
                                      }
                                      noFocusGuards={false}
                                      onActivation={[Function]}
                                      onDeactivation={[Function]}
                                      persistentFocus={false}
                                      returnFocus={true}
                                      sideCar={[Function]}
                                    >
                                      <div
                                        data-focus-guard={true}
                                        key="guard-first"
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={0}
                                      />
                                      <div
                                        data-focus-guard={true}
                                        key="guard-nearest"
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={1}
                                      />
                                      <RequireSideCar
                                        autoFocus={true}
                                        crossFrame={true}
                                        disabled={false}
                                        id={Object {}}
                                        observed={
                                          <div
                                            data-focus-lock-disabled="false"
                                          >
                                            <div>
                                              <div
                                                aria-activedescendant="1"
                                                class="ouiSplitButton__listbox"
                                                role="listbox"
                                                tabindex="0"
                                              >
                                                <a
                                                  aria-selected="false"
                                                  class="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  href="#"
                                                  id="splitButtonItem_0"
                                                  rel="noreferrer"
                                                  role="option"
                                                >
                                                  <span
                                                    class="ouiContextMenu__itemLayout"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__icon"
                                                      color="inherit"
                                                      data-ouiicon-type="empty"
                                                    />
                                                    <span
                                                      class="ouiContextMenuItem__text"
                                                    >
                                                      <div
                                                        class="ouiText ouiText--medium"
                                                      >
                                                        <div
                                                          class="ouiTextAlign ouiTextAlign--center"
                                                        >
                                                          Option #1
                                                        </div>
                                                      </div>
                                                    </span>
                                                  </span>
                                                </a>
                                                <button
                                                  aria-selected="true"
                                                  class="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  id="splitButtonItem_1"
                                                  role="option"
                                                  type="button"
                                                >
                                                  <span
                                                    class="ouiContextMenu__itemLayout"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__icon"
                                                      color="inherit"
                                                      data-ouiicon-type="check"
                                                    />
                                                    <span
                                                      class="ouiContextMenuItem__text"
                                                    >
                                                      <div
                                                        class="ouiText ouiText--medium"
                                                      >
                                                        <div
                                                          class="ouiTextAlign ouiTextAlign--center"
                                                        >
                                                          Option #2
                                                        </div>
                                                      </div>
                                                    </span>
                                                  </span>
                                                </button>
                                              </div>
                                            </div>
                                          </div>
                                        }
                                        onActivation={[Function]}
                                        onDeactivation={[Function]}
                                        persistentFocus={false}
                                        returnFocus={[Function]}
                                        shards={Array []}
                                        sideCar={
                                          Object {
                                            "assignMedium": [Function],
                                            "assignSyncMedium": [Function],
                                            "options": Object {
                                              "async": true,
                                              "ssr": false,
                                            },
                                            "read": [Function],
                                            "useMedium": [Function],
                                          }
                                        }
                                      >
                                        <SideCar
                                          autoFocus={true}
                                          crossFrame={true}
                                          disabled={false}
                                          id={Object {}}
                                          observed={
                                            <div
                                              data-focus-lock-disabled="false"
                                            >
                                              <div>
                                                <div
                                                  aria-activedescendant="1"
                                                  class="ouiSplitButton__listbox"
                                                  role="listbox"
                                                  tabindex="0"
                                                >
                                                  <a
                                                    aria-selected="false"
                                                    class="ouiContextMenuItem ouiSplitButton__item"
                                                    color="primary"
                                                    href="#"
                                                    id="splitButtonItem_0"
                                                    rel="noreferrer"
                                                    role="option"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__itemLayout"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="empty"
                                                      />
                                                      <span
                                                        class="ouiContextMenuItem__text"
                                                      >
                                                        <div
                                                          class="ouiText ouiText--medium"
                                                        >
                                                          <div
                                                            class="ouiTextAlign ouiTextAlign--center"
                                                          >
                                                            Option #1
                                                          </div>
                                                        </div>
                                                      </span>
                                                    </span>
                                                  </a>
                                                  <button
                                                    aria-selected="true"
                                                    class="ouiContextMenuItem ouiSplitButton__item"
                                                    color="primary"
                                                    id="splitButtonItem_1"
                                                    role="option"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__itemLayout"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="check"
                                                      />
                                                      <span
                                                        class="ouiContextMenuItem__text"
                                                      >
                                                        <div
                                                          class="ouiText ouiText--medium"
                                                        >
                                                          <div
                                                            class="ouiTextAlign ouiTextAlign--center"
                                                          >
                                                            Option #2
                                                          </div>
                                                        </div>
                                                      </span>
                                                    </span>
                                                  </button>
                                                </div>
                                              </div>
                                            </div>
                                          }
                                          onActivation={[Function]}
                                          onDeactivation={[Function]}
                                          persistentFocus={false}
                                          returnFocus={[Function]}
                                          shards={Array []}
                                          sideCar={
                                            Object {
                                              "assignMedium": [Function],
                                              "assignSyncMedium": [Function],
                                              "options": Object {
                                                "async": true,
                                                "ssr": false,
                                              },
                                              "read": [Function],
                                              "useMedium": [Function],
                                            }
                                          }
                                        >
                                          <SideEffect(FocusWatcher)
                                            autoFocus={true}
                                            crossFrame={true}
                                            disabled={false}
                                            id={Object {}}
                                            observed={
                                              <div
                                                data-focus-lock-disabled="false"
                                              >
                                                <div>
                                                  <div
                                                    aria-activedescendant="1"
                                                    class="ouiSplitButton__listbox"
                                                    role="listbox"
                                                    tabindex="0"
                                                  >
                                                    <a
                                                      aria-selected="false"
                                                      class="ouiContextMenuItem ouiSplitButton__item"
                                                      color="primary"
                                                      href="#"
                                                      id="splitButtonItem_0"
                                                      rel="noreferrer"
                                                      role="option"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__itemLayout"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__icon"
                                                          color="inherit"
                                                          data-ouiicon-type="empty"
                                                        />
                                                        <span
                                                          class="ouiContextMenuItem__text"
                                                        >
                                                          <div
                                                            class="ouiText ouiText--medium"
                                                          >
                                                            <div
                                                              class="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #1
                                                            </div>
                                                          </div>
                                                        </span>
                                                      </span>
                                                    </a>
                                                    <button
                                                      aria-selected="true"
                                                      class="ouiContextMenuItem ouiSplitButton__item"
                                                      color="primary"
                                                      id="splitButtonItem_1"
                                                      role="option"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__itemLayout"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__icon"
                                                          color="inherit"
                                                          data-ouiicon-type="check"
                                                        />
                                                        <span
                                                          class="ouiContextMenuItem__text"
                                                        >
                                                          <div
                                                            class="ouiText ouiText--medium"
                                                          >
                                                            <div
                                                              class="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #2
                                                            </div>
                                                          </div>
                                                        </span>
                                                      </span>
                                                    </button>
                                                  </div>
                                                </div>
                                              </div>
                                            }
                                            onActivation={[Function]}
                                            onDeactivation={[Function]}
                                            persistentFocus={false}
                                            returnFocus={[Function]}
                                            shards={Array []}
                                          >
                                            <FocusWatcher
                                              autoFocus={true}
                                              crossFrame={true}
                                              disabled={false}
                                              id={Object {}}
                                              observed={
                                                <div
                                                  data-focus-lock-disabled="false"
                                                >
                                                  <div>
                                                    <div
                                                      aria-activedescendant="1"
                                                      class="ouiSplitButton__listbox"
                                                      role="listbox"
                                                      tabindex="0"
                                                    >
                                                      <a
                                                        aria-selected="false"
                                                        class="ouiContextMenuItem ouiSplitButton__item"
                                                        color="primary"
                                                        href="#"
                                                        id="splitButtonItem_0"
                                                        rel="noreferrer"
                                                        role="option"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__itemLayout"
                                                        >
                                                          <span
                                                            class="ouiContextMenu__icon"
                                                            color="inherit"
                                                            data-ouiicon-type="empty"
                                                          />
                                                          <span
                                                            class="ouiContextMenuItem__text"
                                                          >
                                                            <div
                                                              class="ouiText ouiText--medium"
                                                            >
                                                              <div
                                                                class="ouiTextAlign ouiTextAlign--center"
                                                              >
                                                                Option #1
                                                              </div>
                                                            </div>
                                                          </span>
                                                        </span>
                                                      </a>
                                                      <button
                                                        aria-selected="true"
                                                        class="ouiContextMenuItem ouiSplitButton__item"
                                                        color="primary"
                                                        id="splitButtonItem_1"
                                                        role="option"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__itemLayout"
                                                        >
                                                          <span
                                                            class="ouiContextMenu__icon"
                                                            color="inherit"
                                                            data-ouiicon-type="check"
                                                          />
                                                          <span
                                                            class="ouiContextMenuItem__text"
                                                          >
                                                            <div
                                                              class="ouiText ouiText--medium"
                                                            >
                                                              <div
                                                                class="ouiTextAlign ouiTextAlign--center"
                                                              >
                                                                Option #2
                                                              </div>
                                                            </div>
                                                          </span>
                                                        </span>
                                                      </button>
                                                    </div>
                                                  </div>
                                                </div>
                                              }
                                              onActivation={[Function]}
                                              onDeactivation={[Function]}
                                              persistentFocus={false}
                                              returnFocus={[Function]}
                                              shards={Array []}
                                            />
                                          </SideEffect(FocusWatcher)>
                                        </SideCar>
                                      </RequireSideCar>
                                      <ForwardRef
                                        data-focus-lock-disabled={false}
                                        enabled={false}
                                        inert={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onTouchStart={[Function]}
                                        removeScrollBar={true}
                                        sideCar={[Function]}
                                      >
                                        <div
                                          data-focus-lock-disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onScrollCapture={[Function]}
                                          onTouchMoveCapture={[Function]}
                                          onTouchStart={[Function]}
                                          onWheelCapture={[Function]}
                                        >
                                          <div
                                            onKeyDown={[Function]}
                                          >
                                            <div
                                              aria-activedescendant="1"
                                              className="ouiSplitButton__listbox"
                                              role="listbox"
                                              tabIndex={0}
                                            >
                                              <OuiContextMenuItem
                                                aria-selected="false"
                                                buttonRef={[Function]}
                                                className="ouiSplitButton__item"
                                                color="primary"
                                                href="#"
                                                icon="empty"
                                                id="splitButtonItem_0"
                                                key="optionItem_0"
                                                layoutAlign="center"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="option"
                                              >
                                                <a
                                                  aria-selected="false"
                                                  className="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  href="#"
                                                  id="splitButtonItem_0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  rel="noreferrer"
                                                  role="option"
                                                >
                                                  <span
                                                    className="ouiContextMenu__itemLayout"
                                                  >
                                                    <OuiIcon
                                                      className="ouiContextMenu__icon"
                                                      color="inherit"
                                                      size="m"
                                                      type="empty"
                                                    >
                                                      <span
                                                        className="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="empty"
                                                        size="m"
                                                      />
                                                    </OuiIcon>
                                                    <span
                                                      className="ouiContextMenuItem__text"
                                                    >
                                                      <OuiText
                                                        textAlign="center"
                                                      >
                                                        <div
                                                          className="ouiText ouiText--medium"
                                                        >
                                                          <OuiTextAlign
                                                            textAlign="center"
                                                          >
                                                            <div
                                                              className="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #1
                                                            </div>
                                                          </OuiTextAlign>
                                                        </div>
                                                      </OuiText>
                                                    </span>
                                                  </span>
                                                </a>
                                              </OuiContextMenuItem>
                                              <OuiContextMenuItem
                                                aria-selected="true"
                                                buttonRef={[Function]}
                                                className="ouiSplitButton__item"
                                                color="primary"
                                                icon="check"
                                                id="splitButtonItem_1"
                                                key="optionItem_1"
                                                layoutAlign="center"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="option"
                                              >
                                                <button
                                                  aria-selected="true"
                                                  className="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  disabled={false}
                                                  id="splitButtonItem_1"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="option"
                                                  type="button"
                                                >
                                                  <span
                                                    className="ouiContextMenu__itemLayout"
                                                  >
                                                    <OuiIcon
                                                      className="ouiContextMenu__icon"
                                                      color="inherit"
                                                      size="m"
                                                      type="check"
                                                    >
                                                      <span
                                                        className="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="check"
                                                        size="m"
                                                      />
                                                    </OuiIcon>
                                                    <span
                                                      className="ouiContextMenuItem__text"
                                                    >
                                                      <OuiText
                                                        textAlign="center"
                                                      >
                                                        <div
                                                          className="ouiText ouiText--medium"
                                                        >
                                                          <OuiTextAlign
                                                            textAlign="center"
                                                          >
                                                            <div
                                                              className="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #2
                                                            </div>
                                                          </OuiTextAlign>
                                                        </div>
                                                      </OuiText>
                                                    </span>
                                                  </span>
                                                </button>
                                              </OuiContextMenuItem>
                                            </div>
                                          </div>
                                        </div>
                                      </ForwardRef>
                                      <div
                                        data-focus-guard={true}
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={0}
                                      />
                                    </ForwardRef>
                                    <RequireSideCar
                                      noIsolation={true}
                                      onClickOutside={[Function]}
                                      setLockProps={[Function]}
                                      sideCar={
                                        Object {
                                          "assignMedium": [Function],
                                          "assignSyncMedium": [Function],
                                          "options": Object {
                                            "async": true,
                                            "ssr": false,
                                          },
                                          "read": [Function],
                                          "useMedium": [Function],
                                        }
                                      }
                                    >
                                      <SideCar
                                        noIsolation={true}
                                        onClickOutside={[Function]}
                                        setLockProps={[Function]}
                                        sideCar={
                                          Object {
                                            "assignMedium": [Function],
                                            "assignSyncMedium": [Function],
                                            "options": Object {
                                              "async": true,
                                              "ssr": false,
                                            },
                                            "read": [Function],
                                            "useMedium": [Function],
                                          }
                                        }
                                      >
                                        <Effect
                                          noIsolation={true}
                                          onClickOutside={[Function]}
                                          setLockProps={[Function]}
                                        >
                                          <Component>
                                            <Sheet
                                              styles="
 [data-focus-on-hidden] {
   pointer-events: none !important;
 }
"
                                            />
                                          </Component>
                                        </Effect>
                                      </SideCar>
                                    </RequireSideCar>
                                  </ForwardRef>
                                </ForwardRef>
                              </OuiFocusTrap>
                            </div>
                          </OuiMutationObserver>
                        </div>
                      </OuiPanel>
                    </div>
                  </ForwardRef>
                  <div
                    data-focus-guard={true}
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
          </OuiFocusTrap>
        </OuiPortal>
      </div>
    </OuiOutsideClickDetector>
  </OuiPopover>
</OuiSplitButton>
`;

exports[`OuiSplitButton options rendering option with href renders link 1`] = `
<OuiSplitButton
  initiallyOpen={true}
  options={
    Array [
      Object {
        "display": "Option #3",
        "href": "#test",
      },
    ]
  }
>
  <OuiPopover
    anchorPosition="downRight"
    button={
      <OuiSplitButtonControl
        className="ouiSplitButton--isOpen__button"
        color="primary"
        fullWidth={false}
        onClick={[Function]}
        onDropdownClick={[Function]}
        onKeyDown={[Function]}
      >
        Test
      </OuiSplitButtonControl>
    }
    className="ouiSplitButton"
    closePopover={[Function]}
    display="inlineBlock"
    hasArrow={false}
    isOpen={true}
    ownFocus={false}
    panelPaddingSize="none"
    panelRef={[Function]}
  >
    <OuiOutsideClickDetector
      onOutsideClick={[Function]}
    >
      <div
        className="ouiPopover ouiPopover--anchorDownRight ouiPopover-isOpen ouiSplitButton"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
      >
        <div
          className="ouiPopover__anchor"
        >
          <OuiSplitButtonControl
            className="ouiSplitButton--isOpen__button"
            color="primary"
            fullWidth={false}
            onClick={[Function]}
            onDropdownClick={[Function]}
            onKeyDown={[Function]}
          >
            <div
              className="ouiSplitButtonControl ouiSplitButtonColor--primary"
            >
              <OuiButton
                className="ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                color="primary"
                data-test-subj="splitButton--primary"
                fullWidth={false}
                isDisabled={false}
                onClick={[Function]}
                onKeyDown={[Function]}
              >
                <OuiButtonDisplay
                  baseClassName="ouiButton"
                  className="ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                  color="primary"
                  data-test-subj="splitButton--primary"
                  disabled={false}
                  element="button"
                  fullWidth={false}
                  isDisabled={false}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <button
                    className="ouiButton ouiButton--primary ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                    data-test-subj="splitButton--primary"
                    disabled={false}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    style={
                      Object {
                        "minWidth": undefined,
                      }
                    }
                    type="button"
                  >
                    <OuiButtonContent
                      className="ouiButton__content"
                      iconSide="left"
                      textProps={
                        Object {
                          "className": "ouiButton__text",
                        }
                      }
                    >
                      <span
                        className="ouiButtonContent ouiButton__content"
                      >
                        <span
                          className="ouiButton__text"
                        >
                          Test
                        </span>
                      </span>
                    </OuiButtonContent>
                  </button>
                </OuiButtonDisplay>
              </OuiButton>
              <OuiButtonIcon
                aria-label="Open Selections"
                className="ouiSplitButtonControl--dropdown"
                color="primary"
                data-test-subj="splitButton--dropdown"
                disabled={false}
                display="base"
                iconType="arrowDown"
                isDisabled={false}
                onClick={[Function]}
                onKeyDown={[Function]}
                size="m"
              >
                <button
                  aria-label="Open Selections"
                  className="ouiButtonIcon ouiButtonIcon--primary ouiButtonIcon--medium ouiSplitButtonControl--dropdown"
                  data-test-subj="splitButton--dropdown"
                  disabled={false}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <OuiIcon
                    aria-hidden="true"
                    className="ouiButtonIcon__icon"
                    color="inherit"
                    size="m"
                    type="arrowDown"
                  >
                    <span
                      aria-hidden="true"
                      className="ouiButtonIcon__icon"
                      color="inherit"
                      data-ouiicon-type="arrowDown"
                      size="m"
                    />
                  </OuiIcon>
                </button>
              </OuiButtonIcon>
            </div>
          </OuiSplitButtonControl>
        </div>
        <OuiPortal>
          <OuiFocusTrap
            clickOutsideDisables={true}
            disabled={true}
            noIsolation={true}
            onClickOutside={[Function]}
            onEscapeKey={[Function]}
            returnFocus={false}
            scrollLock={false}
          >
            <ForwardRef
              enabled={false}
              noIsolation={true}
              onClickOutside={[Function]}
              onEscapeKey={[Function]}
              returnFocus={false}
              scrollLock={false}
            >
              <ForwardRef
                enabled={false}
                noIsolation={true}
                onClickOutside={[Function]}
                onEscapeKey={[Function]}
                returnFocus={false}
                scrollLock={false}
                sideCar={[Function]}
              >
                <ForwardRef
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "classNames": Object {
                        "fullWidth": "width-before-scroll-bar",
                        "zeroRight": "right-scroll-bar-position",
                      },
                      "defaultProps": Object {
                        "enabled": true,
                        "inert": false,
                        "removeScrollBar": true,
                      },
                      "render": [Function],
                    }
                  }
                  autoFocus={true}
                  crossFrame={true}
                  disabled={true}
                  lockProps={
                    Object {
                      "allowPinchZoom": undefined,
                      "as": undefined,
                      "enabled": false,
                      "inert": undefined,
                      "shards": undefined,
                      "sideCar": [Function],
                      "style": undefined,
                    }
                  }
                  noFocusGuards={false}
                  persistentFocus={false}
                  returnFocus={false}
                  sideCar={[Function]}
                >
                  <div
                    data-focus-guard={true}
                    key="guard-first"
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                  <div
                    data-focus-guard={true}
                    key="guard-nearest"
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                  <ForwardRef
                    data-focus-lock-disabled="disabled"
                    enabled={false}
                    inert={false}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    removeScrollBar={true}
                    sideCar={[Function]}
                  >
                    <div
                      data-focus-lock-disabled="disabled"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onScrollCapture={[Function]}
                      onTouchMoveCapture={[Function]}
                      onWheelCapture={[Function]}
                    >
                      <OuiPanel
                        aria-live="assertive"
                        aria-modal="true"
                        className="ouiPopover__panel ouiPopover__panel--bottom ouiPopover__panel-isOpen ouiPopover__panel-noArrow"
                        hasShadow={false}
                        paddingSize="none"
                        panelRef={[Function]}
                        role="dialog"
                        style={
                          Object {
                            "left": -22,
                            "top": 8,
                            "willChange": "transform, opacity",
                            "zIndex": 2000,
                          }
                        }
                      >
                        <div
                          aria-live="assertive"
                          aria-modal="true"
                          className="ouiPanel ouiPanel--borderRadiusMedium ouiPanel--plain ouiPanel--noShadow ouiPopover__panel ouiPopover__panel--bottom ouiPopover__panel-isOpen ouiPopover__panel-noArrow"
                          role="dialog"
                          style={
                            Object {
                              "left": -22,
                              "top": 8,
                              "willChange": "transform, opacity",
                              "zIndex": 2000,
                            }
                          }
                        >
                          <div
                            className="ouiPopover__panelArrow ouiPopover__panelArrow--bottom"
                          />
                          <OuiMutationObserver
                            observerOptions={
                              Object {
                                "attributes": true,
                                "characterData": true,
                                "childList": true,
                                "subtree": true,
                              }
                            }
                            onMutation={[Function]}
                          >
                            <div>
                              <OuiScreenReaderOnly>
                                <p
                                  className="ouiScreenReaderOnly"
                                  role="alert"
                                >
                                  <OuiI18n
                                    default="You are in a selector of {optionsCount} items and must select a single option. Use the up and down keys to navigate or escape to close."
                                    token="ouiSplitButton.screenReaderAnnouncement"
                                    values={
                                      Object {
                                        "optionsCount": 1,
                                      }
                                    }
                                  >
                                    You are in a selector of 1 items and must select a single option. Use the up and down keys to navigate or escape to close.
                                  </OuiI18n>
                                </p>
                              </OuiScreenReaderOnly>
                              <OuiFocusTrap
                                clickOutsideDisables={true}
                                disabled={false}
                                noIsolation={true}
                                returnFocus={true}
                                scrollLock={false}
                              >
                                <ForwardRef
                                  enabled={true}
                                  noIsolation={true}
                                  onClickOutside={[Function]}
                                  returnFocus={true}
                                  scrollLock={false}
                                >
                                  <ForwardRef
                                    enabled={true}
                                    noIsolation={true}
                                    onClickOutside={[Function]}
                                    returnFocus={true}
                                    scrollLock={false}
                                    sideCar={[Function]}
                                  >
                                    <ForwardRef
                                      as={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "classNames": Object {
                                            "fullWidth": "width-before-scroll-bar",
                                            "zeroRight": "right-scroll-bar-position",
                                          },
                                          "defaultProps": Object {
                                            "enabled": true,
                                            "inert": false,
                                            "removeScrollBar": true,
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      autoFocus={true}
                                      crossFrame={true}
                                      disabled={false}
                                      lockProps={
                                        Object {
                                          "allowPinchZoom": undefined,
                                          "as": undefined,
                                          "enabled": false,
                                          "inert": undefined,
                                          "onMouseDown": [Function],
                                          "onTouchStart": [Function],
                                          "shards": undefined,
                                          "sideCar": [Function],
                                          "style": undefined,
                                        }
                                      }
                                      noFocusGuards={false}
                                      onActivation={[Function]}
                                      onDeactivation={[Function]}
                                      persistentFocus={false}
                                      returnFocus={true}
                                      sideCar={[Function]}
                                    >
                                      <div
                                        data-focus-guard={true}
                                        key="guard-first"
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={0}
                                      />
                                      <div
                                        data-focus-guard={true}
                                        key="guard-nearest"
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={1}
                                      />
                                      <RequireSideCar
                                        autoFocus={true}
                                        crossFrame={true}
                                        disabled={false}
                                        id={Object {}}
                                        observed={
                                          <div
                                            data-focus-lock-disabled="false"
                                          >
                                            <div>
                                              <div
                                                aria-activedescendant="undefined"
                                                class="ouiSplitButton__listbox"
                                                role="listbox"
                                                tabindex="0"
                                              >
                                                <a
                                                  aria-selected="false"
                                                  class="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  href="#test"
                                                  id="splitButtonItem_0"
                                                  rel="noreferrer"
                                                  role="option"
                                                >
                                                  <span
                                                    class="ouiContextMenu__itemLayout"
                                                  >
                                                    <span
                                                      class="ouiContextMenuItem__text"
                                                    >
                                                      <div
                                                        class="ouiText ouiText--medium"
                                                      >
                                                        <div
                                                          class="ouiTextAlign ouiTextAlign--center"
                                                        >
                                                          Option #3
                                                        </div>
                                                      </div>
                                                    </span>
                                                  </span>
                                                </a>
                                              </div>
                                            </div>
                                          </div>
                                        }
                                        onActivation={[Function]}
                                        onDeactivation={[Function]}
                                        persistentFocus={false}
                                        returnFocus={[Function]}
                                        shards={Array []}
                                        sideCar={
                                          Object {
                                            "assignMedium": [Function],
                                            "assignSyncMedium": [Function],
                                            "options": Object {
                                              "async": true,
                                              "ssr": false,
                                            },
                                            "read": [Function],
                                            "useMedium": [Function],
                                          }
                                        }
                                      >
                                        <SideCar
                                          autoFocus={true}
                                          crossFrame={true}
                                          disabled={false}
                                          id={Object {}}
                                          observed={
                                            <div
                                              data-focus-lock-disabled="false"
                                            >
                                              <div>
                                                <div
                                                  aria-activedescendant="undefined"
                                                  class="ouiSplitButton__listbox"
                                                  role="listbox"
                                                  tabindex="0"
                                                >
                                                  <a
                                                    aria-selected="false"
                                                    class="ouiContextMenuItem ouiSplitButton__item"
                                                    color="primary"
                                                    href="#test"
                                                    id="splitButtonItem_0"
                                                    rel="noreferrer"
                                                    role="option"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__itemLayout"
                                                    >
                                                      <span
                                                        class="ouiContextMenuItem__text"
                                                      >
                                                        <div
                                                          class="ouiText ouiText--medium"
                                                        >
                                                          <div
                                                            class="ouiTextAlign ouiTextAlign--center"
                                                          >
                                                            Option #3
                                                          </div>
                                                        </div>
                                                      </span>
                                                    </span>
                                                  </a>
                                                </div>
                                              </div>
                                            </div>
                                          }
                                          onActivation={[Function]}
                                          onDeactivation={[Function]}
                                          persistentFocus={false}
                                          returnFocus={[Function]}
                                          shards={Array []}
                                          sideCar={
                                            Object {
                                              "assignMedium": [Function],
                                              "assignSyncMedium": [Function],
                                              "options": Object {
                                                "async": true,
                                                "ssr": false,
                                              },
                                              "read": [Function],
                                              "useMedium": [Function],
                                            }
                                          }
                                        >
                                          <SideEffect(FocusWatcher)
                                            autoFocus={true}
                                            crossFrame={true}
                                            disabled={false}
                                            id={Object {}}
                                            observed={
                                              <div
                                                data-focus-lock-disabled="false"
                                              >
                                                <div>
                                                  <div
                                                    aria-activedescendant="undefined"
                                                    class="ouiSplitButton__listbox"
                                                    role="listbox"
                                                    tabindex="0"
                                                  >
                                                    <a
                                                      aria-selected="false"
                                                      class="ouiContextMenuItem ouiSplitButton__item"
                                                      color="primary"
                                                      href="#test"
                                                      id="splitButtonItem_0"
                                                      rel="noreferrer"
                                                      role="option"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__itemLayout"
                                                      >
                                                        <span
                                                          class="ouiContextMenuItem__text"
                                                        >
                                                          <div
                                                            class="ouiText ouiText--medium"
                                                          >
                                                            <div
                                                              class="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #3
                                                            </div>
                                                          </div>
                                                        </span>
                                                      </span>
                                                    </a>
                                                  </div>
                                                </div>
                                              </div>
                                            }
                                            onActivation={[Function]}
                                            onDeactivation={[Function]}
                                            persistentFocus={false}
                                            returnFocus={[Function]}
                                            shards={Array []}
                                          >
                                            <FocusWatcher
                                              autoFocus={true}
                                              crossFrame={true}
                                              disabled={false}
                                              id={Object {}}
                                              observed={
                                                <div
                                                  data-focus-lock-disabled="false"
                                                >
                                                  <div>
                                                    <div
                                                      aria-activedescendant="undefined"
                                                      class="ouiSplitButton__listbox"
                                                      role="listbox"
                                                      tabindex="0"
                                                    >
                                                      <a
                                                        aria-selected="false"
                                                        class="ouiContextMenuItem ouiSplitButton__item"
                                                        color="primary"
                                                        href="#test"
                                                        id="splitButtonItem_0"
                                                        rel="noreferrer"
                                                        role="option"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__itemLayout"
                                                        >
                                                          <span
                                                            class="ouiContextMenuItem__text"
                                                          >
                                                            <div
                                                              class="ouiText ouiText--medium"
                                                            >
                                                              <div
                                                                class="ouiTextAlign ouiTextAlign--center"
                                                              >
                                                                Option #3
                                                              </div>
                                                            </div>
                                                          </span>
                                                        </span>
                                                      </a>
                                                    </div>
                                                  </div>
                                                </div>
                                              }
                                              onActivation={[Function]}
                                              onDeactivation={[Function]}
                                              persistentFocus={false}
                                              returnFocus={[Function]}
                                              shards={Array []}
                                            />
                                          </SideEffect(FocusWatcher)>
                                        </SideCar>
                                      </RequireSideCar>
                                      <ForwardRef
                                        data-focus-lock-disabled={false}
                                        enabled={false}
                                        inert={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onTouchStart={[Function]}
                                        removeScrollBar={true}
                                        sideCar={[Function]}
                                      >
                                        <div
                                          data-focus-lock-disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onScrollCapture={[Function]}
                                          onTouchMoveCapture={[Function]}
                                          onTouchStart={[Function]}
                                          onWheelCapture={[Function]}
                                        >
                                          <div
                                            onKeyDown={[Function]}
                                          >
                                            <div
                                              aria-activedescendant="undefined"
                                              className="ouiSplitButton__listbox"
                                              role="listbox"
                                              tabIndex={0}
                                            >
                                              <OuiContextMenuItem
                                                aria-selected="false"
                                                buttonRef={[Function]}
                                                className="ouiSplitButton__item"
                                                color="primary"
                                                href="#test"
                                                id="splitButtonItem_0"
                                                key="optionItem_0"
                                                layoutAlign="center"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="option"
                                              >
                                                <a
                                                  aria-selected="false"
                                                  className="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  href="#test"
                                                  id="splitButtonItem_0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  rel="noreferrer"
                                                  role="option"
                                                >
                                                  <span
                                                    className="ouiContextMenu__itemLayout"
                                                  >
                                                    <span
                                                      className="ouiContextMenuItem__text"
                                                    >
                                                      <OuiText
                                                        textAlign="center"
                                                      >
                                                        <div
                                                          className="ouiText ouiText--medium"
                                                        >
                                                          <OuiTextAlign
                                                            textAlign="center"
                                                          >
                                                            <div
                                                              className="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #3
                                                            </div>
                                                          </OuiTextAlign>
                                                        </div>
                                                      </OuiText>
                                                    </span>
                                                  </span>
                                                </a>
                                              </OuiContextMenuItem>
                                            </div>
                                          </div>
                                        </div>
                                      </ForwardRef>
                                      <div
                                        data-focus-guard={true}
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={0}
                                      />
                                    </ForwardRef>
                                    <RequireSideCar
                                      noIsolation={true}
                                      onClickOutside={[Function]}
                                      setLockProps={[Function]}
                                      sideCar={
                                        Object {
                                          "assignMedium": [Function],
                                          "assignSyncMedium": [Function],
                                          "options": Object {
                                            "async": true,
                                            "ssr": false,
                                          },
                                          "read": [Function],
                                          "useMedium": [Function],
                                        }
                                      }
                                    >
                                      <SideCar
                                        noIsolation={true}
                                        onClickOutside={[Function]}
                                        setLockProps={[Function]}
                                        sideCar={
                                          Object {
                                            "assignMedium": [Function],
                                            "assignSyncMedium": [Function],
                                            "options": Object {
                                              "async": true,
                                              "ssr": false,
                                            },
                                            "read": [Function],
                                            "useMedium": [Function],
                                          }
                                        }
                                      >
                                        <Effect
                                          noIsolation={true}
                                          onClickOutside={[Function]}
                                          setLockProps={[Function]}
                                        >
                                          <Component>
                                            <Sheet
                                              styles="
 [data-focus-on-hidden] {
   pointer-events: none !important;
 }
"
                                            />
                                          </Component>
                                        </Effect>
                                      </SideCar>
                                    </RequireSideCar>
                                  </ForwardRef>
                                </ForwardRef>
                              </OuiFocusTrap>
                            </div>
                          </OuiMutationObserver>
                        </div>
                      </OuiPanel>
                    </div>
                  </ForwardRef>
                  <div
                    data-focus-guard={true}
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
          </OuiFocusTrap>
        </OuiPortal>
      </div>
    </OuiOutsideClickDetector>
  </OuiPopover>
</OuiSplitButton>
`;

exports[`OuiSplitButton options rendering options are rendered when select is open 1`] = `
<OuiSplitButton
  initiallyOpen={true}
  options={
    Array [
      Object {
        "display": "Option #1",
        "href": "#",
      },
      Object {
        "display": "Option #2",
      },
    ]
  }
>
  <OuiPopover
    anchorPosition="downRight"
    button={
      <OuiSplitButtonControl
        className="ouiSplitButton--isOpen__button"
        color="primary"
        fullWidth={false}
        onClick={[Function]}
        onDropdownClick={[Function]}
        onKeyDown={[Function]}
      >
        Test
      </OuiSplitButtonControl>
    }
    className="ouiSplitButton"
    closePopover={[Function]}
    display="inlineBlock"
    hasArrow={false}
    isOpen={true}
    ownFocus={false}
    panelPaddingSize="none"
    panelRef={[Function]}
  >
    <OuiOutsideClickDetector
      onOutsideClick={[Function]}
    >
      <div
        className="ouiPopover ouiPopover--anchorDownRight ouiPopover-isOpen ouiSplitButton"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
      >
        <div
          className="ouiPopover__anchor"
        >
          <OuiSplitButtonControl
            className="ouiSplitButton--isOpen__button"
            color="primary"
            fullWidth={false}
            onClick={[Function]}
            onDropdownClick={[Function]}
            onKeyDown={[Function]}
          >
            <div
              className="ouiSplitButtonControl ouiSplitButtonColor--primary"
            >
              <OuiButton
                className="ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                color="primary"
                data-test-subj="splitButton--primary"
                fullWidth={false}
                isDisabled={false}
                onClick={[Function]}
                onKeyDown={[Function]}
              >
                <OuiButtonDisplay
                  baseClassName="ouiButton"
                  className="ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                  color="primary"
                  data-test-subj="splitButton--primary"
                  disabled={false}
                  element="button"
                  fullWidth={false}
                  isDisabled={false}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <button
                    className="ouiButton ouiButton--primary ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                    data-test-subj="splitButton--primary"
                    disabled={false}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    style={
                      Object {
                        "minWidth": undefined,
                      }
                    }
                    type="button"
                  >
                    <OuiButtonContent
                      className="ouiButton__content"
                      iconSide="left"
                      textProps={
                        Object {
                          "className": "ouiButton__text",
                        }
                      }
                    >
                      <span
                        className="ouiButtonContent ouiButton__content"
                      >
                        <span
                          className="ouiButton__text"
                        >
                          Test
                        </span>
                      </span>
                    </OuiButtonContent>
                  </button>
                </OuiButtonDisplay>
              </OuiButton>
              <OuiButtonIcon
                aria-label="Open Selections"
                className="ouiSplitButtonControl--dropdown"
                color="primary"
                data-test-subj="splitButton--dropdown"
                disabled={false}
                display="base"
                iconType="arrowDown"
                isDisabled={false}
                onClick={[Function]}
                onKeyDown={[Function]}
                size="m"
              >
                <button
                  aria-label="Open Selections"
                  className="ouiButtonIcon ouiButtonIcon--primary ouiButtonIcon--medium ouiSplitButtonControl--dropdown"
                  data-test-subj="splitButton--dropdown"
                  disabled={false}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <OuiIcon
                    aria-hidden="true"
                    className="ouiButtonIcon__icon"
                    color="inherit"
                    size="m"
                    type="arrowDown"
                  >
                    <span
                      aria-hidden="true"
                      className="ouiButtonIcon__icon"
                      color="inherit"
                      data-ouiicon-type="arrowDown"
                      size="m"
                    />
                  </OuiIcon>
                </button>
              </OuiButtonIcon>
            </div>
          </OuiSplitButtonControl>
        </div>
        <OuiPortal>
          <OuiFocusTrap
            clickOutsideDisables={true}
            disabled={true}
            noIsolation={true}
            onClickOutside={[Function]}
            onEscapeKey={[Function]}
            returnFocus={false}
            scrollLock={false}
          >
            <ForwardRef
              enabled={false}
              noIsolation={true}
              onClickOutside={[Function]}
              onEscapeKey={[Function]}
              returnFocus={false}
              scrollLock={false}
            >
              <ForwardRef
                enabled={false}
                noIsolation={true}
                onClickOutside={[Function]}
                onEscapeKey={[Function]}
                returnFocus={false}
                scrollLock={false}
                sideCar={[Function]}
              >
                <ForwardRef
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "classNames": Object {
                        "fullWidth": "width-before-scroll-bar",
                        "zeroRight": "right-scroll-bar-position",
                      },
                      "defaultProps": Object {
                        "enabled": true,
                        "inert": false,
                        "removeScrollBar": true,
                      },
                      "render": [Function],
                    }
                  }
                  autoFocus={true}
                  crossFrame={true}
                  disabled={true}
                  lockProps={
                    Object {
                      "allowPinchZoom": undefined,
                      "as": undefined,
                      "enabled": false,
                      "inert": undefined,
                      "shards": undefined,
                      "sideCar": [Function],
                      "style": undefined,
                    }
                  }
                  noFocusGuards={false}
                  persistentFocus={false}
                  returnFocus={false}
                  sideCar={[Function]}
                >
                  <div
                    data-focus-guard={true}
                    key="guard-first"
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                  <div
                    data-focus-guard={true}
                    key="guard-nearest"
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                  <ForwardRef
                    data-focus-lock-disabled="disabled"
                    enabled={false}
                    inert={false}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    removeScrollBar={true}
                    sideCar={[Function]}
                  >
                    <div
                      data-focus-lock-disabled="disabled"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onScrollCapture={[Function]}
                      onTouchMoveCapture={[Function]}
                      onWheelCapture={[Function]}
                    >
                      <OuiPanel
                        aria-live="assertive"
                        aria-modal="true"
                        className="ouiPopover__panel ouiPopover__panel--bottom ouiPopover__panel-isOpen ouiPopover__panel-noArrow"
                        hasShadow={false}
                        paddingSize="none"
                        panelRef={[Function]}
                        role="dialog"
                        style={
                          Object {
                            "left": -22,
                            "top": 8,
                            "willChange": "transform, opacity",
                            "zIndex": 2000,
                          }
                        }
                      >
                        <div
                          aria-live="assertive"
                          aria-modal="true"
                          className="ouiPanel ouiPanel--borderRadiusMedium ouiPanel--plain ouiPanel--noShadow ouiPopover__panel ouiPopover__panel--bottom ouiPopover__panel-isOpen ouiPopover__panel-noArrow"
                          role="dialog"
                          style={
                            Object {
                              "left": -22,
                              "top": 8,
                              "willChange": "transform, opacity",
                              "zIndex": 2000,
                            }
                          }
                        >
                          <div
                            className="ouiPopover__panelArrow ouiPopover__panelArrow--bottom"
                          />
                          <OuiMutationObserver
                            observerOptions={
                              Object {
                                "attributes": true,
                                "characterData": true,
                                "childList": true,
                                "subtree": true,
                              }
                            }
                            onMutation={[Function]}
                          >
                            <div>
                              <OuiScreenReaderOnly>
                                <p
                                  className="ouiScreenReaderOnly"
                                  role="alert"
                                >
                                  <OuiI18n
                                    default="You are in a selector of {optionsCount} items and must select a single option. Use the up and down keys to navigate or escape to close."
                                    token="ouiSplitButton.screenReaderAnnouncement"
                                    values={
                                      Object {
                                        "optionsCount": 2,
                                      }
                                    }
                                  >
                                    You are in a selector of 2 items and must select a single option. Use the up and down keys to navigate or escape to close.
                                  </OuiI18n>
                                </p>
                              </OuiScreenReaderOnly>
                              <OuiFocusTrap
                                clickOutsideDisables={true}
                                disabled={false}
                                noIsolation={true}
                                returnFocus={true}
                                scrollLock={false}
                              >
                                <ForwardRef
                                  enabled={true}
                                  noIsolation={true}
                                  onClickOutside={[Function]}
                                  returnFocus={true}
                                  scrollLock={false}
                                >
                                  <ForwardRef
                                    enabled={true}
                                    noIsolation={true}
                                    onClickOutside={[Function]}
                                    returnFocus={true}
                                    scrollLock={false}
                                    sideCar={[Function]}
                                  >
                                    <ForwardRef
                                      as={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "classNames": Object {
                                            "fullWidth": "width-before-scroll-bar",
                                            "zeroRight": "right-scroll-bar-position",
                                          },
                                          "defaultProps": Object {
                                            "enabled": true,
                                            "inert": false,
                                            "removeScrollBar": true,
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      autoFocus={true}
                                      crossFrame={true}
                                      disabled={false}
                                      lockProps={
                                        Object {
                                          "allowPinchZoom": undefined,
                                          "as": undefined,
                                          "enabled": false,
                                          "inert": undefined,
                                          "onMouseDown": [Function],
                                          "onTouchStart": [Function],
                                          "shards": undefined,
                                          "sideCar": [Function],
                                          "style": undefined,
                                        }
                                      }
                                      noFocusGuards={false}
                                      onActivation={[Function]}
                                      onDeactivation={[Function]}
                                      persistentFocus={false}
                                      returnFocus={true}
                                      sideCar={[Function]}
                                    >
                                      <div
                                        data-focus-guard={true}
                                        key="guard-first"
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={0}
                                      />
                                      <div
                                        data-focus-guard={true}
                                        key="guard-nearest"
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={1}
                                      />
                                      <RequireSideCar
                                        autoFocus={true}
                                        crossFrame={true}
                                        disabled={false}
                                        id={Object {}}
                                        observed={
                                          <div
                                            data-focus-lock-disabled="false"
                                          >
                                            <div>
                                              <div
                                                aria-activedescendant="undefined"
                                                class="ouiSplitButton__listbox"
                                                role="listbox"
                                                tabindex="0"
                                              >
                                                <a
                                                  aria-selected="false"
                                                  class="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  href="#"
                                                  id="splitButtonItem_0"
                                                  rel="noreferrer"
                                                  role="option"
                                                >
                                                  <span
                                                    class="ouiContextMenu__itemLayout"
                                                  >
                                                    <span
                                                      class="ouiContextMenuItem__text"
                                                    >
                                                      <div
                                                        class="ouiText ouiText--medium"
                                                      >
                                                        <div
                                                          class="ouiTextAlign ouiTextAlign--center"
                                                        >
                                                          Option #1
                                                        </div>
                                                      </div>
                                                    </span>
                                                  </span>
                                                </a>
                                                <button
                                                  aria-selected="false"
                                                  class="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  id="splitButtonItem_1"
                                                  role="option"
                                                  type="button"
                                                >
                                                  <span
                                                    class="ouiContextMenu__itemLayout"
                                                  >
                                                    <span
                                                      class="ouiContextMenuItem__text"
                                                    >
                                                      <div
                                                        class="ouiText ouiText--medium"
                                                      >
                                                        <div
                                                          class="ouiTextAlign ouiTextAlign--center"
                                                        >
                                                          Option #2
                                                        </div>
                                                      </div>
                                                    </span>
                                                  </span>
                                                </button>
                                              </div>
                                            </div>
                                          </div>
                                        }
                                        onActivation={[Function]}
                                        onDeactivation={[Function]}
                                        persistentFocus={false}
                                        returnFocus={[Function]}
                                        shards={Array []}
                                        sideCar={
                                          Object {
                                            "assignMedium": [Function],
                                            "assignSyncMedium": [Function],
                                            "options": Object {
                                              "async": true,
                                              "ssr": false,
                                            },
                                            "read": [Function],
                                            "useMedium": [Function],
                                          }
                                        }
                                      >
                                        <SideCar
                                          autoFocus={true}
                                          crossFrame={true}
                                          disabled={false}
                                          id={Object {}}
                                          observed={
                                            <div
                                              data-focus-lock-disabled="false"
                                            >
                                              <div>
                                                <div
                                                  aria-activedescendant="undefined"
                                                  class="ouiSplitButton__listbox"
                                                  role="listbox"
                                                  tabindex="0"
                                                >
                                                  <a
                                                    aria-selected="false"
                                                    class="ouiContextMenuItem ouiSplitButton__item"
                                                    color="primary"
                                                    href="#"
                                                    id="splitButtonItem_0"
                                                    rel="noreferrer"
                                                    role="option"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__itemLayout"
                                                    >
                                                      <span
                                                        class="ouiContextMenuItem__text"
                                                      >
                                                        <div
                                                          class="ouiText ouiText--medium"
                                                        >
                                                          <div
                                                            class="ouiTextAlign ouiTextAlign--center"
                                                          >
                                                            Option #1
                                                          </div>
                                                        </div>
                                                      </span>
                                                    </span>
                                                  </a>
                                                  <button
                                                    aria-selected="false"
                                                    class="ouiContextMenuItem ouiSplitButton__item"
                                                    color="primary"
                                                    id="splitButtonItem_1"
                                                    role="option"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__itemLayout"
                                                    >
                                                      <span
                                                        class="ouiContextMenuItem__text"
                                                      >
                                                        <div
                                                          class="ouiText ouiText--medium"
                                                        >
                                                          <div
                                                            class="ouiTextAlign ouiTextAlign--center"
                                                          >
                                                            Option #2
                                                          </div>
                                                        </div>
                                                      </span>
                                                    </span>
                                                  </button>
                                                </div>
                                              </div>
                                            </div>
                                          }
                                          onActivation={[Function]}
                                          onDeactivation={[Function]}
                                          persistentFocus={false}
                                          returnFocus={[Function]}
                                          shards={Array []}
                                          sideCar={
                                            Object {
                                              "assignMedium": [Function],
                                              "assignSyncMedium": [Function],
                                              "options": Object {
                                                "async": true,
                                                "ssr": false,
                                              },
                                              "read": [Function],
                                              "useMedium": [Function],
                                            }
                                          }
                                        >
                                          <SideEffect(FocusWatcher)
                                            autoFocus={true}
                                            crossFrame={true}
                                            disabled={false}
                                            id={Object {}}
                                            observed={
                                              <div
                                                data-focus-lock-disabled="false"
                                              >
                                                <div>
                                                  <div
                                                    aria-activedescendant="undefined"
                                                    class="ouiSplitButton__listbox"
                                                    role="listbox"
                                                    tabindex="0"
                                                  >
                                                    <a
                                                      aria-selected="false"
                                                      class="ouiContextMenuItem ouiSplitButton__item"
                                                      color="primary"
                                                      href="#"
                                                      id="splitButtonItem_0"
                                                      rel="noreferrer"
                                                      role="option"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__itemLayout"
                                                      >
                                                        <span
                                                          class="ouiContextMenuItem__text"
                                                        >
                                                          <div
                                                            class="ouiText ouiText--medium"
                                                          >
                                                            <div
                                                              class="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #1
                                                            </div>
                                                          </div>
                                                        </span>
                                                      </span>
                                                    </a>
                                                    <button
                                                      aria-selected="false"
                                                      class="ouiContextMenuItem ouiSplitButton__item"
                                                      color="primary"
                                                      id="splitButtonItem_1"
                                                      role="option"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__itemLayout"
                                                      >
                                                        <span
                                                          class="ouiContextMenuItem__text"
                                                        >
                                                          <div
                                                            class="ouiText ouiText--medium"
                                                          >
                                                            <div
                                                              class="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #2
                                                            </div>
                                                          </div>
                                                        </span>
                                                      </span>
                                                    </button>
                                                  </div>
                                                </div>
                                              </div>
                                            }
                                            onActivation={[Function]}
                                            onDeactivation={[Function]}
                                            persistentFocus={false}
                                            returnFocus={[Function]}
                                            shards={Array []}
                                          >
                                            <FocusWatcher
                                              autoFocus={true}
                                              crossFrame={true}
                                              disabled={false}
                                              id={Object {}}
                                              observed={
                                                <div
                                                  data-focus-lock-disabled="false"
                                                >
                                                  <div>
                                                    <div
                                                      aria-activedescendant="undefined"
                                                      class="ouiSplitButton__listbox"
                                                      role="listbox"
                                                      tabindex="0"
                                                    >
                                                      <a
                                                        aria-selected="false"
                                                        class="ouiContextMenuItem ouiSplitButton__item"
                                                        color="primary"
                                                        href="#"
                                                        id="splitButtonItem_0"
                                                        rel="noreferrer"
                                                        role="option"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__itemLayout"
                                                        >
                                                          <span
                                                            class="ouiContextMenuItem__text"
                                                          >
                                                            <div
                                                              class="ouiText ouiText--medium"
                                                            >
                                                              <div
                                                                class="ouiTextAlign ouiTextAlign--center"
                                                              >
                                                                Option #1
                                                              </div>
                                                            </div>
                                                          </span>
                                                        </span>
                                                      </a>
                                                      <button
                                                        aria-selected="false"
                                                        class="ouiContextMenuItem ouiSplitButton__item"
                                                        color="primary"
                                                        id="splitButtonItem_1"
                                                        role="option"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__itemLayout"
                                                        >
                                                          <span
                                                            class="ouiContextMenuItem__text"
                                                          >
                                                            <div
                                                              class="ouiText ouiText--medium"
                                                            >
                                                              <div
                                                                class="ouiTextAlign ouiTextAlign--center"
                                                              >
                                                                Option #2
                                                              </div>
                                                            </div>
                                                          </span>
                                                        </span>
                                                      </button>
                                                    </div>
                                                  </div>
                                                </div>
                                              }
                                              onActivation={[Function]}
                                              onDeactivation={[Function]}
                                              persistentFocus={false}
                                              returnFocus={[Function]}
                                              shards={Array []}
                                            />
                                          </SideEffect(FocusWatcher)>
                                        </SideCar>
                                      </RequireSideCar>
                                      <ForwardRef
                                        data-focus-lock-disabled={false}
                                        enabled={false}
                                        inert={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onTouchStart={[Function]}
                                        removeScrollBar={true}
                                        sideCar={[Function]}
                                      >
                                        <div
                                          data-focus-lock-disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onScrollCapture={[Function]}
                                          onTouchMoveCapture={[Function]}
                                          onTouchStart={[Function]}
                                          onWheelCapture={[Function]}
                                        >
                                          <div
                                            onKeyDown={[Function]}
                                          >
                                            <div
                                              aria-activedescendant="undefined"
                                              className="ouiSplitButton__listbox"
                                              role="listbox"
                                              tabIndex={0}
                                            >
                                              <OuiContextMenuItem
                                                aria-selected="false"
                                                buttonRef={[Function]}
                                                className="ouiSplitButton__item"
                                                color="primary"
                                                href="#"
                                                id="splitButtonItem_0"
                                                key="optionItem_0"
                                                layoutAlign="center"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="option"
                                              >
                                                <a
                                                  aria-selected="false"
                                                  className="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  href="#"
                                                  id="splitButtonItem_0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  rel="noreferrer"
                                                  role="option"
                                                >
                                                  <span
                                                    className="ouiContextMenu__itemLayout"
                                                  >
                                                    <span
                                                      className="ouiContextMenuItem__text"
                                                    >
                                                      <OuiText
                                                        textAlign="center"
                                                      >
                                                        <div
                                                          className="ouiText ouiText--medium"
                                                        >
                                                          <OuiTextAlign
                                                            textAlign="center"
                                                          >
                                                            <div
                                                              className="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #1
                                                            </div>
                                                          </OuiTextAlign>
                                                        </div>
                                                      </OuiText>
                                                    </span>
                                                  </span>
                                                </a>
                                              </OuiContextMenuItem>
                                              <OuiContextMenuItem
                                                aria-selected="false"
                                                buttonRef={[Function]}
                                                className="ouiSplitButton__item"
                                                color="primary"
                                                id="splitButtonItem_1"
                                                key="optionItem_1"
                                                layoutAlign="center"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="option"
                                              >
                                                <button
                                                  aria-selected="false"
                                                  className="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  disabled={false}
                                                  id="splitButtonItem_1"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="option"
                                                  type="button"
                                                >
                                                  <span
                                                    className="ouiContextMenu__itemLayout"
                                                  >
                                                    <span
                                                      className="ouiContextMenuItem__text"
                                                    >
                                                      <OuiText
                                                        textAlign="center"
                                                      >
                                                        <div
                                                          className="ouiText ouiText--medium"
                                                        >
                                                          <OuiTextAlign
                                                            textAlign="center"
                                                          >
                                                            <div
                                                              className="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #2
                                                            </div>
                                                          </OuiTextAlign>
                                                        </div>
                                                      </OuiText>
                                                    </span>
                                                  </span>
                                                </button>
                                              </OuiContextMenuItem>
                                            </div>
                                          </div>
                                        </div>
                                      </ForwardRef>
                                      <div
                                        data-focus-guard={true}
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={0}
                                      />
                                    </ForwardRef>
                                    <RequireSideCar
                                      noIsolation={true}
                                      onClickOutside={[Function]}
                                      setLockProps={[Function]}
                                      sideCar={
                                        Object {
                                          "assignMedium": [Function],
                                          "assignSyncMedium": [Function],
                                          "options": Object {
                                            "async": true,
                                            "ssr": false,
                                          },
                                          "read": [Function],
                                          "useMedium": [Function],
                                        }
                                      }
                                    >
                                      <SideCar
                                        noIsolation={true}
                                        onClickOutside={[Function]}
                                        setLockProps={[Function]}
                                        sideCar={
                                          Object {
                                            "assignMedium": [Function],
                                            "assignSyncMedium": [Function],
                                            "options": Object {
                                              "async": true,
                                              "ssr": false,
                                            },
                                            "read": [Function],
                                            "useMedium": [Function],
                                          }
                                        }
                                      >
                                        <Effect
                                          noIsolation={true}
                                          onClickOutside={[Function]}
                                          setLockProps={[Function]}
                                        >
                                          <Component>
                                            <Sheet
                                              styles="
 [data-focus-on-hidden] {
   pointer-events: none !important;
 }
"
                                            />
                                          </Component>
                                        </Effect>
                                      </SideCar>
                                    </RequireSideCar>
                                  </ForwardRef>
                                </ForwardRef>
                              </OuiFocusTrap>
                            </div>
                          </OuiMutationObserver>
                        </div>
                      </OuiPanel>
                    </div>
                  </ForwardRef>
                  <div
                    data-focus-guard={true}
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
          </OuiFocusTrap>
        </OuiPortal>
      </div>
    </OuiOutsideClickDetector>
  </OuiPopover>
</OuiSplitButton>
`;

exports[`OuiSplitButton options rendering selectedItem 0 is rendered 1`] = `
<OuiSplitButton
  initiallyOpen={true}
  options={
    Array [
      Object {
        "display": "Option #1",
        "href": "#",
      },
      Object {
        "display": "Option #2",
      },
    ]
  }
  selectedIndex={0}
>
  <OuiPopover
    anchorPosition="downRight"
    button={
      <OuiSplitButtonControl
        className="ouiSplitButton--isOpen__button"
        color="primary"
        fullWidth={false}
        onClick={[Function]}
        onDropdownClick={[Function]}
        onKeyDown={[Function]}
      >
        Test
      </OuiSplitButtonControl>
    }
    className="ouiSplitButton"
    closePopover={[Function]}
    display="inlineBlock"
    hasArrow={false}
    isOpen={true}
    ownFocus={false}
    panelPaddingSize="none"
    panelRef={[Function]}
  >
    <OuiOutsideClickDetector
      onOutsideClick={[Function]}
    >
      <div
        className="ouiPopover ouiPopover--anchorDownRight ouiPopover-isOpen ouiSplitButton"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
      >
        <div
          className="ouiPopover__anchor"
        >
          <OuiSplitButtonControl
            className="ouiSplitButton--isOpen__button"
            color="primary"
            fullWidth={false}
            onClick={[Function]}
            onDropdownClick={[Function]}
            onKeyDown={[Function]}
          >
            <div
              className="ouiSplitButtonControl ouiSplitButtonColor--primary"
            >
              <OuiButton
                className="ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                color="primary"
                data-test-subj="splitButton--primary"
                fullWidth={false}
                isDisabled={false}
                onClick={[Function]}
                onKeyDown={[Function]}
              >
                <OuiButtonDisplay
                  baseClassName="ouiButton"
                  className="ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                  color="primary"
                  data-test-subj="splitButton--primary"
                  disabled={false}
                  element="button"
                  fullWidth={false}
                  isDisabled={false}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <button
                    className="ouiButton ouiButton--primary ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                    data-test-subj="splitButton--primary"
                    disabled={false}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    style={
                      Object {
                        "minWidth": undefined,
                      }
                    }
                    type="button"
                  >
                    <OuiButtonContent
                      className="ouiButton__content"
                      iconSide="left"
                      textProps={
                        Object {
                          "className": "ouiButton__text",
                        }
                      }
                    >
                      <span
                        className="ouiButtonContent ouiButton__content"
                      >
                        <span
                          className="ouiButton__text"
                        >
                          Test
                        </span>
                      </span>
                    </OuiButtonContent>
                  </button>
                </OuiButtonDisplay>
              </OuiButton>
              <OuiButtonIcon
                aria-label="Open Selections"
                className="ouiSplitButtonControl--dropdown"
                color="primary"
                data-test-subj="splitButton--dropdown"
                disabled={false}
                display="base"
                iconType="arrowDown"
                isDisabled={false}
                onClick={[Function]}
                onKeyDown={[Function]}
                size="m"
              >
                <button
                  aria-label="Open Selections"
                  className="ouiButtonIcon ouiButtonIcon--primary ouiButtonIcon--medium ouiSplitButtonControl--dropdown"
                  data-test-subj="splitButton--dropdown"
                  disabled={false}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <OuiIcon
                    aria-hidden="true"
                    className="ouiButtonIcon__icon"
                    color="inherit"
                    size="m"
                    type="arrowDown"
                  >
                    <span
                      aria-hidden="true"
                      className="ouiButtonIcon__icon"
                      color="inherit"
                      data-ouiicon-type="arrowDown"
                      size="m"
                    />
                  </OuiIcon>
                </button>
              </OuiButtonIcon>
            </div>
          </OuiSplitButtonControl>
        </div>
        <OuiPortal>
          <OuiFocusTrap
            clickOutsideDisables={true}
            disabled={true}
            noIsolation={true}
            onClickOutside={[Function]}
            onEscapeKey={[Function]}
            returnFocus={false}
            scrollLock={false}
          >
            <ForwardRef
              enabled={false}
              noIsolation={true}
              onClickOutside={[Function]}
              onEscapeKey={[Function]}
              returnFocus={false}
              scrollLock={false}
            >
              <ForwardRef
                enabled={false}
                noIsolation={true}
                onClickOutside={[Function]}
                onEscapeKey={[Function]}
                returnFocus={false}
                scrollLock={false}
                sideCar={[Function]}
              >
                <ForwardRef
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "classNames": Object {
                        "fullWidth": "width-before-scroll-bar",
                        "zeroRight": "right-scroll-bar-position",
                      },
                      "defaultProps": Object {
                        "enabled": true,
                        "inert": false,
                        "removeScrollBar": true,
                      },
                      "render": [Function],
                    }
                  }
                  autoFocus={true}
                  crossFrame={true}
                  disabled={true}
                  lockProps={
                    Object {
                      "allowPinchZoom": undefined,
                      "as": undefined,
                      "enabled": false,
                      "inert": undefined,
                      "shards": undefined,
                      "sideCar": [Function],
                      "style": undefined,
                    }
                  }
                  noFocusGuards={false}
                  persistentFocus={false}
                  returnFocus={false}
                  sideCar={[Function]}
                >
                  <div
                    data-focus-guard={true}
                    key="guard-first"
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                  <div
                    data-focus-guard={true}
                    key="guard-nearest"
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                  <ForwardRef
                    data-focus-lock-disabled="disabled"
                    enabled={false}
                    inert={false}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    removeScrollBar={true}
                    sideCar={[Function]}
                  >
                    <div
                      data-focus-lock-disabled="disabled"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onScrollCapture={[Function]}
                      onTouchMoveCapture={[Function]}
                      onWheelCapture={[Function]}
                    >
                      <OuiPanel
                        aria-live="assertive"
                        aria-modal="true"
                        className="ouiPopover__panel ouiPopover__panel--bottom ouiPopover__panel-isOpen ouiPopover__panel-noArrow"
                        hasShadow={false}
                        paddingSize="none"
                        panelRef={[Function]}
                        role="dialog"
                        style={
                          Object {
                            "left": -22,
                            "top": 8,
                            "willChange": "transform, opacity",
                            "zIndex": 2000,
                          }
                        }
                      >
                        <div
                          aria-live="assertive"
                          aria-modal="true"
                          className="ouiPanel ouiPanel--borderRadiusMedium ouiPanel--plain ouiPanel--noShadow ouiPopover__panel ouiPopover__panel--bottom ouiPopover__panel-isOpen ouiPopover__panel-noArrow"
                          role="dialog"
                          style={
                            Object {
                              "left": -22,
                              "top": 8,
                              "willChange": "transform, opacity",
                              "zIndex": 2000,
                            }
                          }
                        >
                          <div
                            className="ouiPopover__panelArrow ouiPopover__panelArrow--bottom"
                          />
                          <OuiMutationObserver
                            observerOptions={
                              Object {
                                "attributes": true,
                                "characterData": true,
                                "childList": true,
                                "subtree": true,
                              }
                            }
                            onMutation={[Function]}
                          >
                            <div>
                              <OuiScreenReaderOnly>
                                <p
                                  className="ouiScreenReaderOnly"
                                  role="alert"
                                >
                                  <OuiI18n
                                    default="You are in a selector of {optionsCount} items and must select a single option. Use the up and down keys to navigate or escape to close."
                                    token="ouiSplitButton.screenReaderAnnouncement"
                                    values={
                                      Object {
                                        "optionsCount": 2,
                                      }
                                    }
                                  >
                                    You are in a selector of 2 items and must select a single option. Use the up and down keys to navigate or escape to close.
                                  </OuiI18n>
                                </p>
                              </OuiScreenReaderOnly>
                              <OuiFocusTrap
                                clickOutsideDisables={true}
                                disabled={false}
                                noIsolation={true}
                                returnFocus={true}
                                scrollLock={false}
                              >
                                <ForwardRef
                                  enabled={true}
                                  noIsolation={true}
                                  onClickOutside={[Function]}
                                  returnFocus={true}
                                  scrollLock={false}
                                >
                                  <ForwardRef
                                    enabled={true}
                                    noIsolation={true}
                                    onClickOutside={[Function]}
                                    returnFocus={true}
                                    scrollLock={false}
                                    sideCar={[Function]}
                                  >
                                    <ForwardRef
                                      as={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "classNames": Object {
                                            "fullWidth": "width-before-scroll-bar",
                                            "zeroRight": "right-scroll-bar-position",
                                          },
                                          "defaultProps": Object {
                                            "enabled": true,
                                            "inert": false,
                                            "removeScrollBar": true,
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      autoFocus={true}
                                      crossFrame={true}
                                      disabled={false}
                                      lockProps={
                                        Object {
                                          "allowPinchZoom": undefined,
                                          "as": undefined,
                                          "enabled": false,
                                          "inert": undefined,
                                          "onMouseDown": [Function],
                                          "onTouchStart": [Function],
                                          "shards": undefined,
                                          "sideCar": [Function],
                                          "style": undefined,
                                        }
                                      }
                                      noFocusGuards={false}
                                      onActivation={[Function]}
                                      onDeactivation={[Function]}
                                      persistentFocus={false}
                                      returnFocus={true}
                                      sideCar={[Function]}
                                    >
                                      <div
                                        data-focus-guard={true}
                                        key="guard-first"
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={0}
                                      />
                                      <div
                                        data-focus-guard={true}
                                        key="guard-nearest"
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={1}
                                      />
                                      <RequireSideCar
                                        autoFocus={true}
                                        crossFrame={true}
                                        disabled={false}
                                        id={Object {}}
                                        observed={
                                          <div
                                            data-focus-lock-disabled="false"
                                          >
                                            <div>
                                              <div
                                                aria-activedescendant="0"
                                                class="ouiSplitButton__listbox"
                                                role="listbox"
                                                tabindex="0"
                                              >
                                                <a
                                                  aria-selected="true"
                                                  class="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  href="#"
                                                  id="splitButtonItem_0"
                                                  rel="noreferrer"
                                                  role="option"
                                                >
                                                  <span
                                                    class="ouiContextMenu__itemLayout"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__icon"
                                                      color="inherit"
                                                      data-ouiicon-type="check"
                                                    />
                                                    <span
                                                      class="ouiContextMenuItem__text"
                                                    >
                                                      <div
                                                        class="ouiText ouiText--medium"
                                                      >
                                                        <div
                                                          class="ouiTextAlign ouiTextAlign--center"
                                                        >
                                                          Option #1
                                                        </div>
                                                      </div>
                                                    </span>
                                                  </span>
                                                </a>
                                                <button
                                                  aria-selected="false"
                                                  class="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  id="splitButtonItem_1"
                                                  role="option"
                                                  type="button"
                                                >
                                                  <span
                                                    class="ouiContextMenu__itemLayout"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__icon"
                                                      color="inherit"
                                                      data-ouiicon-type="empty"
                                                    />
                                                    <span
                                                      class="ouiContextMenuItem__text"
                                                    >
                                                      <div
                                                        class="ouiText ouiText--medium"
                                                      >
                                                        <div
                                                          class="ouiTextAlign ouiTextAlign--center"
                                                        >
                                                          Option #2
                                                        </div>
                                                      </div>
                                                    </span>
                                                  </span>
                                                </button>
                                              </div>
                                            </div>
                                          </div>
                                        }
                                        onActivation={[Function]}
                                        onDeactivation={[Function]}
                                        persistentFocus={false}
                                        returnFocus={[Function]}
                                        shards={Array []}
                                        sideCar={
                                          Object {
                                            "assignMedium": [Function],
                                            "assignSyncMedium": [Function],
                                            "options": Object {
                                              "async": true,
                                              "ssr": false,
                                            },
                                            "read": [Function],
                                            "useMedium": [Function],
                                          }
                                        }
                                      >
                                        <SideCar
                                          autoFocus={true}
                                          crossFrame={true}
                                          disabled={false}
                                          id={Object {}}
                                          observed={
                                            <div
                                              data-focus-lock-disabled="false"
                                            >
                                              <div>
                                                <div
                                                  aria-activedescendant="0"
                                                  class="ouiSplitButton__listbox"
                                                  role="listbox"
                                                  tabindex="0"
                                                >
                                                  <a
                                                    aria-selected="true"
                                                    class="ouiContextMenuItem ouiSplitButton__item"
                                                    color="primary"
                                                    href="#"
                                                    id="splitButtonItem_0"
                                                    rel="noreferrer"
                                                    role="option"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__itemLayout"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="check"
                                                      />
                                                      <span
                                                        class="ouiContextMenuItem__text"
                                                      >
                                                        <div
                                                          class="ouiText ouiText--medium"
                                                        >
                                                          <div
                                                            class="ouiTextAlign ouiTextAlign--center"
                                                          >
                                                            Option #1
                                                          </div>
                                                        </div>
                                                      </span>
                                                    </span>
                                                  </a>
                                                  <button
                                                    aria-selected="false"
                                                    class="ouiContextMenuItem ouiSplitButton__item"
                                                    color="primary"
                                                    id="splitButtonItem_1"
                                                    role="option"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__itemLayout"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="empty"
                                                      />
                                                      <span
                                                        class="ouiContextMenuItem__text"
                                                      >
                                                        <div
                                                          class="ouiText ouiText--medium"
                                                        >
                                                          <div
                                                            class="ouiTextAlign ouiTextAlign--center"
                                                          >
                                                            Option #2
                                                          </div>
                                                        </div>
                                                      </span>
                                                    </span>
                                                  </button>
                                                </div>
                                              </div>
                                            </div>
                                          }
                                          onActivation={[Function]}
                                          onDeactivation={[Function]}
                                          persistentFocus={false}
                                          returnFocus={[Function]}
                                          shards={Array []}
                                          sideCar={
                                            Object {
                                              "assignMedium": [Function],
                                              "assignSyncMedium": [Function],
                                              "options": Object {
                                                "async": true,
                                                "ssr": false,
                                              },
                                              "read": [Function],
                                              "useMedium": [Function],
                                            }
                                          }
                                        >
                                          <SideEffect(FocusWatcher)
                                            autoFocus={true}
                                            crossFrame={true}
                                            disabled={false}
                                            id={Object {}}
                                            observed={
                                              <div
                                                data-focus-lock-disabled="false"
                                              >
                                                <div>
                                                  <div
                                                    aria-activedescendant="0"
                                                    class="ouiSplitButton__listbox"
                                                    role="listbox"
                                                    tabindex="0"
                                                  >
                                                    <a
                                                      aria-selected="true"
                                                      class="ouiContextMenuItem ouiSplitButton__item"
                                                      color="primary"
                                                      href="#"
                                                      id="splitButtonItem_0"
                                                      rel="noreferrer"
                                                      role="option"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__itemLayout"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__icon"
                                                          color="inherit"
                                                          data-ouiicon-type="check"
                                                        />
                                                        <span
                                                          class="ouiContextMenuItem__text"
                                                        >
                                                          <div
                                                            class="ouiText ouiText--medium"
                                                          >
                                                            <div
                                                              class="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #1
                                                            </div>
                                                          </div>
                                                        </span>
                                                      </span>
                                                    </a>
                                                    <button
                                                      aria-selected="false"
                                                      class="ouiContextMenuItem ouiSplitButton__item"
                                                      color="primary"
                                                      id="splitButtonItem_1"
                                                      role="option"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__itemLayout"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__icon"
                                                          color="inherit"
                                                          data-ouiicon-type="empty"
                                                        />
                                                        <span
                                                          class="ouiContextMenuItem__text"
                                                        >
                                                          <div
                                                            class="ouiText ouiText--medium"
                                                          >
                                                            <div
                                                              class="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #2
                                                            </div>
                                                          </div>
                                                        </span>
                                                      </span>
                                                    </button>
                                                  </div>
                                                </div>
                                              </div>
                                            }
                                            onActivation={[Function]}
                                            onDeactivation={[Function]}
                                            persistentFocus={false}
                                            returnFocus={[Function]}
                                            shards={Array []}
                                          >
                                            <FocusWatcher
                                              autoFocus={true}
                                              crossFrame={true}
                                              disabled={false}
                                              id={Object {}}
                                              observed={
                                                <div
                                                  data-focus-lock-disabled="false"
                                                >
                                                  <div>
                                                    <div
                                                      aria-activedescendant="0"
                                                      class="ouiSplitButton__listbox"
                                                      role="listbox"
                                                      tabindex="0"
                                                    >
                                                      <a
                                                        aria-selected="true"
                                                        class="ouiContextMenuItem ouiSplitButton__item"
                                                        color="primary"
                                                        href="#"
                                                        id="splitButtonItem_0"
                                                        rel="noreferrer"
                                                        role="option"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__itemLayout"
                                                        >
                                                          <span
                                                            class="ouiContextMenu__icon"
                                                            color="inherit"
                                                            data-ouiicon-type="check"
                                                          />
                                                          <span
                                                            class="ouiContextMenuItem__text"
                                                          >
                                                            <div
                                                              class="ouiText ouiText--medium"
                                                            >
                                                              <div
                                                                class="ouiTextAlign ouiTextAlign--center"
                                                              >
                                                                Option #1
                                                              </div>
                                                            </div>
                                                          </span>
                                                        </span>
                                                      </a>
                                                      <button
                                                        aria-selected="false"
                                                        class="ouiContextMenuItem ouiSplitButton__item"
                                                        color="primary"
                                                        id="splitButtonItem_1"
                                                        role="option"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__itemLayout"
                                                        >
                                                          <span
                                                            class="ouiContextMenu__icon"
                                                            color="inherit"
                                                            data-ouiicon-type="empty"
                                                          />
                                                          <span
                                                            class="ouiContextMenuItem__text"
                                                          >
                                                            <div
                                                              class="ouiText ouiText--medium"
                                                            >
                                                              <div
                                                                class="ouiTextAlign ouiTextAlign--center"
                                                              >
                                                                Option #2
                                                              </div>
                                                            </div>
                                                          </span>
                                                        </span>
                                                      </button>
                                                    </div>
                                                  </div>
                                                </div>
                                              }
                                              onActivation={[Function]}
                                              onDeactivation={[Function]}
                                              persistentFocus={false}
                                              returnFocus={[Function]}
                                              shards={Array []}
                                            />
                                          </SideEffect(FocusWatcher)>
                                        </SideCar>
                                      </RequireSideCar>
                                      <ForwardRef
                                        data-focus-lock-disabled={false}
                                        enabled={false}
                                        inert={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onTouchStart={[Function]}
                                        removeScrollBar={true}
                                        sideCar={[Function]}
                                      >
                                        <div
                                          data-focus-lock-disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onScrollCapture={[Function]}
                                          onTouchMoveCapture={[Function]}
                                          onTouchStart={[Function]}
                                          onWheelCapture={[Function]}
                                        >
                                          <div
                                            onKeyDown={[Function]}
                                          >
                                            <div
                                              aria-activedescendant="0"
                                              className="ouiSplitButton__listbox"
                                              role="listbox"
                                              tabIndex={0}
                                            >
                                              <OuiContextMenuItem
                                                aria-selected="true"
                                                buttonRef={[Function]}
                                                className="ouiSplitButton__item"
                                                color="primary"
                                                href="#"
                                                icon="check"
                                                id="splitButtonItem_0"
                                                key="optionItem_0"
                                                layoutAlign="center"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="option"
                                              >
                                                <a
                                                  aria-selected="true"
                                                  className="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  href="#"
                                                  id="splitButtonItem_0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  rel="noreferrer"
                                                  role="option"
                                                >
                                                  <span
                                                    className="ouiContextMenu__itemLayout"
                                                  >
                                                    <OuiIcon
                                                      className="ouiContextMenu__icon"
                                                      color="inherit"
                                                      size="m"
                                                      type="check"
                                                    >
                                                      <span
                                                        className="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="check"
                                                        size="m"
                                                      />
                                                    </OuiIcon>
                                                    <span
                                                      className="ouiContextMenuItem__text"
                                                    >
                                                      <OuiText
                                                        textAlign="center"
                                                      >
                                                        <div
                                                          className="ouiText ouiText--medium"
                                                        >
                                                          <OuiTextAlign
                                                            textAlign="center"
                                                          >
                                                            <div
                                                              className="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #1
                                                            </div>
                                                          </OuiTextAlign>
                                                        </div>
                                                      </OuiText>
                                                    </span>
                                                  </span>
                                                </a>
                                              </OuiContextMenuItem>
                                              <OuiContextMenuItem
                                                aria-selected="false"
                                                buttonRef={[Function]}
                                                className="ouiSplitButton__item"
                                                color="primary"
                                                icon="empty"
                                                id="splitButtonItem_1"
                                                key="optionItem_1"
                                                layoutAlign="center"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="option"
                                              >
                                                <button
                                                  aria-selected="false"
                                                  className="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  disabled={false}
                                                  id="splitButtonItem_1"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="option"
                                                  type="button"
                                                >
                                                  <span
                                                    className="ouiContextMenu__itemLayout"
                                                  >
                                                    <OuiIcon
                                                      className="ouiContextMenu__icon"
                                                      color="inherit"
                                                      size="m"
                                                      type="empty"
                                                    >
                                                      <span
                                                        className="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="empty"
                                                        size="m"
                                                      />
                                                    </OuiIcon>
                                                    <span
                                                      className="ouiContextMenuItem__text"
                                                    >
                                                      <OuiText
                                                        textAlign="center"
                                                      >
                                                        <div
                                                          className="ouiText ouiText--medium"
                                                        >
                                                          <OuiTextAlign
                                                            textAlign="center"
                                                          >
                                                            <div
                                                              className="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #2
                                                            </div>
                                                          </OuiTextAlign>
                                                        </div>
                                                      </OuiText>
                                                    </span>
                                                  </span>
                                                </button>
                                              </OuiContextMenuItem>
                                            </div>
                                          </div>
                                        </div>
                                      </ForwardRef>
                                      <div
                                        data-focus-guard={true}
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={0}
                                      />
                                    </ForwardRef>
                                    <RequireSideCar
                                      noIsolation={true}
                                      onClickOutside={[Function]}
                                      setLockProps={[Function]}
                                      sideCar={
                                        Object {
                                          "assignMedium": [Function],
                                          "assignSyncMedium": [Function],
                                          "options": Object {
                                            "async": true,
                                            "ssr": false,
                                          },
                                          "read": [Function],
                                          "useMedium": [Function],
                                        }
                                      }
                                    >
                                      <SideCar
                                        noIsolation={true}
                                        onClickOutside={[Function]}
                                        setLockProps={[Function]}
                                        sideCar={
                                          Object {
                                            "assignMedium": [Function],
                                            "assignSyncMedium": [Function],
                                            "options": Object {
                                              "async": true,
                                              "ssr": false,
                                            },
                                            "read": [Function],
                                            "useMedium": [Function],
                                          }
                                        }
                                      >
                                        <Effect
                                          noIsolation={true}
                                          onClickOutside={[Function]}
                                          setLockProps={[Function]}
                                        >
                                          <Component>
                                            <Sheet
                                              styles="
 [data-focus-on-hidden] {
   pointer-events: none !important;
 }
"
                                            />
                                          </Component>
                                        </Effect>
                                      </SideCar>
                                    </RequireSideCar>
                                  </ForwardRef>
                                </ForwardRef>
                              </OuiFocusTrap>
                            </div>
                          </OuiMutationObserver>
                        </div>
                      </OuiPanel>
                    </div>
                  </ForwardRef>
                  <div
                    data-focus-guard={true}
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
          </OuiFocusTrap>
        </OuiPortal>
      </div>
    </OuiOutsideClickDetector>
  </OuiPopover>
</OuiSplitButton>
`;

exports[`OuiSplitButton options rendering selectedItem last is rendered 1`] = `
<OuiSplitButton
  initiallyOpen={true}
  options={
    Array [
      Object {
        "display": "Option #1",
        "href": "#",
      },
      Object {
        "display": "Option #2",
      },
      Object {
        "display": "Option #3",
      },
    ]
  }
  selectedIndex={2}
>
  <OuiPopover
    anchorPosition="downRight"
    button={
      <OuiSplitButtonControl
        className="ouiSplitButton--isOpen__button"
        color="primary"
        fullWidth={false}
        onClick={[Function]}
        onDropdownClick={[Function]}
        onKeyDown={[Function]}
      >
        Test
      </OuiSplitButtonControl>
    }
    className="ouiSplitButton"
    closePopover={[Function]}
    display="inlineBlock"
    hasArrow={false}
    isOpen={true}
    ownFocus={false}
    panelPaddingSize="none"
    panelRef={[Function]}
  >
    <OuiOutsideClickDetector
      onOutsideClick={[Function]}
    >
      <div
        className="ouiPopover ouiPopover--anchorDownRight ouiPopover-isOpen ouiSplitButton"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
      >
        <div
          className="ouiPopover__anchor"
        >
          <OuiSplitButtonControl
            className="ouiSplitButton--isOpen__button"
            color="primary"
            fullWidth={false}
            onClick={[Function]}
            onDropdownClick={[Function]}
            onKeyDown={[Function]}
          >
            <div
              className="ouiSplitButtonControl ouiSplitButtonColor--primary"
            >
              <OuiButton
                className="ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                color="primary"
                data-test-subj="splitButton--primary"
                fullWidth={false}
                isDisabled={false}
                onClick={[Function]}
                onKeyDown={[Function]}
              >
                <OuiButtonDisplay
                  baseClassName="ouiButton"
                  className="ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                  color="primary"
                  data-test-subj="splitButton--primary"
                  disabled={false}
                  element="button"
                  fullWidth={false}
                  isDisabled={false}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <button
                    className="ouiButton ouiButton--primary ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
                    data-test-subj="splitButton--primary"
                    disabled={false}
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    style={
                      Object {
                        "minWidth": undefined,
                      }
                    }
                    type="button"
                  >
                    <OuiButtonContent
                      className="ouiButton__content"
                      iconSide="left"
                      textProps={
                        Object {
                          "className": "ouiButton__text",
                        }
                      }
                    >
                      <span
                        className="ouiButtonContent ouiButton__content"
                      >
                        <span
                          className="ouiButton__text"
                        >
                          Test
                        </span>
                      </span>
                    </OuiButtonContent>
                  </button>
                </OuiButtonDisplay>
              </OuiButton>
              <OuiButtonIcon
                aria-label="Open Selections"
                className="ouiSplitButtonControl--dropdown"
                color="primary"
                data-test-subj="splitButton--dropdown"
                disabled={false}
                display="base"
                iconType="arrowDown"
                isDisabled={false}
                onClick={[Function]}
                onKeyDown={[Function]}
                size="m"
              >
                <button
                  aria-label="Open Selections"
                  className="ouiButtonIcon ouiButtonIcon--primary ouiButtonIcon--medium ouiSplitButtonControl--dropdown"
                  data-test-subj="splitButton--dropdown"
                  disabled={false}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <OuiIcon
                    aria-hidden="true"
                    className="ouiButtonIcon__icon"
                    color="inherit"
                    size="m"
                    type="arrowDown"
                  >
                    <span
                      aria-hidden="true"
                      className="ouiButtonIcon__icon"
                      color="inherit"
                      data-ouiicon-type="arrowDown"
                      size="m"
                    />
                  </OuiIcon>
                </button>
              </OuiButtonIcon>
            </div>
          </OuiSplitButtonControl>
        </div>
        <OuiPortal>
          <OuiFocusTrap
            clickOutsideDisables={true}
            disabled={true}
            noIsolation={true}
            onClickOutside={[Function]}
            onEscapeKey={[Function]}
            returnFocus={false}
            scrollLock={false}
          >
            <ForwardRef
              enabled={false}
              noIsolation={true}
              onClickOutside={[Function]}
              onEscapeKey={[Function]}
              returnFocus={false}
              scrollLock={false}
            >
              <ForwardRef
                enabled={false}
                noIsolation={true}
                onClickOutside={[Function]}
                onEscapeKey={[Function]}
                returnFocus={false}
                scrollLock={false}
                sideCar={[Function]}
              >
                <ForwardRef
                  as={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "classNames": Object {
                        "fullWidth": "width-before-scroll-bar",
                        "zeroRight": "right-scroll-bar-position",
                      },
                      "defaultProps": Object {
                        "enabled": true,
                        "inert": false,
                        "removeScrollBar": true,
                      },
                      "render": [Function],
                    }
                  }
                  autoFocus={true}
                  crossFrame={true}
                  disabled={true}
                  lockProps={
                    Object {
                      "allowPinchZoom": undefined,
                      "as": undefined,
                      "enabled": false,
                      "inert": undefined,
                      "shards": undefined,
                      "sideCar": [Function],
                      "style": undefined,
                    }
                  }
                  noFocusGuards={false}
                  persistentFocus={false}
                  returnFocus={false}
                  sideCar={[Function]}
                >
                  <div
                    data-focus-guard={true}
                    key="guard-first"
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                  <div
                    data-focus-guard={true}
                    key="guard-nearest"
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                  <ForwardRef
                    data-focus-lock-disabled="disabled"
                    enabled={false}
                    inert={false}
                    onBlur={[Function]}
                    onFocus={[Function]}
                    removeScrollBar={true}
                    sideCar={[Function]}
                  >
                    <div
                      data-focus-lock-disabled="disabled"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      onScrollCapture={[Function]}
                      onTouchMoveCapture={[Function]}
                      onWheelCapture={[Function]}
                    >
                      <OuiPanel
                        aria-live="assertive"
                        aria-modal="true"
                        className="ouiPopover__panel ouiPopover__panel--bottom ouiPopover__panel-isOpen ouiPopover__panel-noArrow"
                        hasShadow={false}
                        paddingSize="none"
                        panelRef={[Function]}
                        role="dialog"
                        style={
                          Object {
                            "left": -22,
                            "top": 8,
                            "willChange": "transform, opacity",
                            "zIndex": 2000,
                          }
                        }
                      >
                        <div
                          aria-live="assertive"
                          aria-modal="true"
                          className="ouiPanel ouiPanel--borderRadiusMedium ouiPanel--plain ouiPanel--noShadow ouiPopover__panel ouiPopover__panel--bottom ouiPopover__panel-isOpen ouiPopover__panel-noArrow"
                          role="dialog"
                          style={
                            Object {
                              "left": -22,
                              "top": 8,
                              "willChange": "transform, opacity",
                              "zIndex": 2000,
                            }
                          }
                        >
                          <div
                            className="ouiPopover__panelArrow ouiPopover__panelArrow--bottom"
                          />
                          <OuiMutationObserver
                            observerOptions={
                              Object {
                                "attributes": true,
                                "characterData": true,
                                "childList": true,
                                "subtree": true,
                              }
                            }
                            onMutation={[Function]}
                          >
                            <div>
                              <OuiScreenReaderOnly>
                                <p
                                  className="ouiScreenReaderOnly"
                                  role="alert"
                                >
                                  <OuiI18n
                                    default="You are in a selector of {optionsCount} items and must select a single option. Use the up and down keys to navigate or escape to close."
                                    token="ouiSplitButton.screenReaderAnnouncement"
                                    values={
                                      Object {
                                        "optionsCount": 3,
                                      }
                                    }
                                  >
                                    You are in a selector of 3 items and must select a single option. Use the up and down keys to navigate or escape to close.
                                  </OuiI18n>
                                </p>
                              </OuiScreenReaderOnly>
                              <OuiFocusTrap
                                clickOutsideDisables={true}
                                disabled={false}
                                noIsolation={true}
                                returnFocus={true}
                                scrollLock={false}
                              >
                                <ForwardRef
                                  enabled={true}
                                  noIsolation={true}
                                  onClickOutside={[Function]}
                                  returnFocus={true}
                                  scrollLock={false}
                                >
                                  <ForwardRef
                                    enabled={true}
                                    noIsolation={true}
                                    onClickOutside={[Function]}
                                    returnFocus={true}
                                    scrollLock={false}
                                    sideCar={[Function]}
                                  >
                                    <ForwardRef
                                      as={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "classNames": Object {
                                            "fullWidth": "width-before-scroll-bar",
                                            "zeroRight": "right-scroll-bar-position",
                                          },
                                          "defaultProps": Object {
                                            "enabled": true,
                                            "inert": false,
                                            "removeScrollBar": true,
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      autoFocus={true}
                                      crossFrame={true}
                                      disabled={false}
                                      lockProps={
                                        Object {
                                          "allowPinchZoom": undefined,
                                          "as": undefined,
                                          "enabled": false,
                                          "inert": undefined,
                                          "onMouseDown": [Function],
                                          "onTouchStart": [Function],
                                          "shards": undefined,
                                          "sideCar": [Function],
                                          "style": undefined,
                                        }
                                      }
                                      noFocusGuards={false}
                                      onActivation={[Function]}
                                      onDeactivation={[Function]}
                                      persistentFocus={false}
                                      returnFocus={true}
                                      sideCar={[Function]}
                                    >
                                      <div
                                        data-focus-guard={true}
                                        key="guard-first"
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={0}
                                      />
                                      <div
                                        data-focus-guard={true}
                                        key="guard-nearest"
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={1}
                                      />
                                      <RequireSideCar
                                        autoFocus={true}
                                        crossFrame={true}
                                        disabled={false}
                                        id={Object {}}
                                        observed={
                                          <div
                                            data-focus-lock-disabled="false"
                                          >
                                            <div>
                                              <div
                                                aria-activedescendant="2"
                                                class="ouiSplitButton__listbox"
                                                role="listbox"
                                                tabindex="0"
                                              >
                                                <a
                                                  aria-selected="false"
                                                  class="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  href="#"
                                                  id="splitButtonItem_0"
                                                  rel="noreferrer"
                                                  role="option"
                                                >
                                                  <span
                                                    class="ouiContextMenu__itemLayout"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__icon"
                                                      color="inherit"
                                                      data-ouiicon-type="empty"
                                                    />
                                                    <span
                                                      class="ouiContextMenuItem__text"
                                                    >
                                                      <div
                                                        class="ouiText ouiText--medium"
                                                      >
                                                        <div
                                                          class="ouiTextAlign ouiTextAlign--center"
                                                        >
                                                          Option #1
                                                        </div>
                                                      </div>
                                                    </span>
                                                  </span>
                                                </a>
                                                <button
                                                  aria-selected="false"
                                                  class="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  id="splitButtonItem_1"
                                                  role="option"
                                                  type="button"
                                                >
                                                  <span
                                                    class="ouiContextMenu__itemLayout"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__icon"
                                                      color="inherit"
                                                      data-ouiicon-type="empty"
                                                    />
                                                    <span
                                                      class="ouiContextMenuItem__text"
                                                    >
                                                      <div
                                                        class="ouiText ouiText--medium"
                                                      >
                                                        <div
                                                          class="ouiTextAlign ouiTextAlign--center"
                                                        >
                                                          Option #2
                                                        </div>
                                                      </div>
                                                    </span>
                                                  </span>
                                                </button>
                                                <button
                                                  aria-selected="true"
                                                  class="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  id="splitButtonItem_2"
                                                  role="option"
                                                  type="button"
                                                >
                                                  <span
                                                    class="ouiContextMenu__itemLayout"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__icon"
                                                      color="inherit"
                                                      data-ouiicon-type="check"
                                                    />
                                                    <span
                                                      class="ouiContextMenuItem__text"
                                                    >
                                                      <div
                                                        class="ouiText ouiText--medium"
                                                      >
                                                        <div
                                                          class="ouiTextAlign ouiTextAlign--center"
                                                        >
                                                          Option #3
                                                        </div>
                                                      </div>
                                                    </span>
                                                  </span>
                                                </button>
                                              </div>
                                            </div>
                                          </div>
                                        }
                                        onActivation={[Function]}
                                        onDeactivation={[Function]}
                                        persistentFocus={false}
                                        returnFocus={[Function]}
                                        shards={Array []}
                                        sideCar={
                                          Object {
                                            "assignMedium": [Function],
                                            "assignSyncMedium": [Function],
                                            "options": Object {
                                              "async": true,
                                              "ssr": false,
                                            },
                                            "read": [Function],
                                            "useMedium": [Function],
                                          }
                                        }
                                      >
                                        <SideCar
                                          autoFocus={true}
                                          crossFrame={true}
                                          disabled={false}
                                          id={Object {}}
                                          observed={
                                            <div
                                              data-focus-lock-disabled="false"
                                            >
                                              <div>
                                                <div
                                                  aria-activedescendant="2"
                                                  class="ouiSplitButton__listbox"
                                                  role="listbox"
                                                  tabindex="0"
                                                >
                                                  <a
                                                    aria-selected="false"
                                                    class="ouiContextMenuItem ouiSplitButton__item"
                                                    color="primary"
                                                    href="#"
                                                    id="splitButtonItem_0"
                                                    rel="noreferrer"
                                                    role="option"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__itemLayout"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="empty"
                                                      />
                                                      <span
                                                        class="ouiContextMenuItem__text"
                                                      >
                                                        <div
                                                          class="ouiText ouiText--medium"
                                                        >
                                                          <div
                                                            class="ouiTextAlign ouiTextAlign--center"
                                                          >
                                                            Option #1
                                                          </div>
                                                        </div>
                                                      </span>
                                                    </span>
                                                  </a>
                                                  <button
                                                    aria-selected="false"
                                                    class="ouiContextMenuItem ouiSplitButton__item"
                                                    color="primary"
                                                    id="splitButtonItem_1"
                                                    role="option"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__itemLayout"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="empty"
                                                      />
                                                      <span
                                                        class="ouiContextMenuItem__text"
                                                      >
                                                        <div
                                                          class="ouiText ouiText--medium"
                                                        >
                                                          <div
                                                            class="ouiTextAlign ouiTextAlign--center"
                                                          >
                                                            Option #2
                                                          </div>
                                                        </div>
                                                      </span>
                                                    </span>
                                                  </button>
                                                  <button
                                                    aria-selected="true"
                                                    class="ouiContextMenuItem ouiSplitButton__item"
                                                    color="primary"
                                                    id="splitButtonItem_2"
                                                    role="option"
                                                    type="button"
                                                  >
                                                    <span
                                                      class="ouiContextMenu__itemLayout"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="check"
                                                      />
                                                      <span
                                                        class="ouiContextMenuItem__text"
                                                      >
                                                        <div
                                                          class="ouiText ouiText--medium"
                                                        >
                                                          <div
                                                            class="ouiTextAlign ouiTextAlign--center"
                                                          >
                                                            Option #3
                                                          </div>
                                                        </div>
                                                      </span>
                                                    </span>
                                                  </button>
                                                </div>
                                              </div>
                                            </div>
                                          }
                                          onActivation={[Function]}
                                          onDeactivation={[Function]}
                                          persistentFocus={false}
                                          returnFocus={[Function]}
                                          shards={Array []}
                                          sideCar={
                                            Object {
                                              "assignMedium": [Function],
                                              "assignSyncMedium": [Function],
                                              "options": Object {
                                                "async": true,
                                                "ssr": false,
                                              },
                                              "read": [Function],
                                              "useMedium": [Function],
                                            }
                                          }
                                        >
                                          <SideEffect(FocusWatcher)
                                            autoFocus={true}
                                            crossFrame={true}
                                            disabled={false}
                                            id={Object {}}
                                            observed={
                                              <div
                                                data-focus-lock-disabled="false"
                                              >
                                                <div>
                                                  <div
                                                    aria-activedescendant="2"
                                                    class="ouiSplitButton__listbox"
                                                    role="listbox"
                                                    tabindex="0"
                                                  >
                                                    <a
                                                      aria-selected="false"
                                                      class="ouiContextMenuItem ouiSplitButton__item"
                                                      color="primary"
                                                      href="#"
                                                      id="splitButtonItem_0"
                                                      rel="noreferrer"
                                                      role="option"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__itemLayout"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__icon"
                                                          color="inherit"
                                                          data-ouiicon-type="empty"
                                                        />
                                                        <span
                                                          class="ouiContextMenuItem__text"
                                                        >
                                                          <div
                                                            class="ouiText ouiText--medium"
                                                          >
                                                            <div
                                                              class="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #1
                                                            </div>
                                                          </div>
                                                        </span>
                                                      </span>
                                                    </a>
                                                    <button
                                                      aria-selected="false"
                                                      class="ouiContextMenuItem ouiSplitButton__item"
                                                      color="primary"
                                                      id="splitButtonItem_1"
                                                      role="option"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__itemLayout"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__icon"
                                                          color="inherit"
                                                          data-ouiicon-type="empty"
                                                        />
                                                        <span
                                                          class="ouiContextMenuItem__text"
                                                        >
                                                          <div
                                                            class="ouiText ouiText--medium"
                                                          >
                                                            <div
                                                              class="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #2
                                                            </div>
                                                          </div>
                                                        </span>
                                                      </span>
                                                    </button>
                                                    <button
                                                      aria-selected="true"
                                                      class="ouiContextMenuItem ouiSplitButton__item"
                                                      color="primary"
                                                      id="splitButtonItem_2"
                                                      role="option"
                                                      type="button"
                                                    >
                                                      <span
                                                        class="ouiContextMenu__itemLayout"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__icon"
                                                          color="inherit"
                                                          data-ouiicon-type="check"
                                                        />
                                                        <span
                                                          class="ouiContextMenuItem__text"
                                                        >
                                                          <div
                                                            class="ouiText ouiText--medium"
                                                          >
                                                            <div
                                                              class="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #3
                                                            </div>
                                                          </div>
                                                        </span>
                                                      </span>
                                                    </button>
                                                  </div>
                                                </div>
                                              </div>
                                            }
                                            onActivation={[Function]}
                                            onDeactivation={[Function]}
                                            persistentFocus={false}
                                            returnFocus={[Function]}
                                            shards={Array []}
                                          >
                                            <FocusWatcher
                                              autoFocus={true}
                                              crossFrame={true}
                                              disabled={false}
                                              id={Object {}}
                                              observed={
                                                <div
                                                  data-focus-lock-disabled="false"
                                                >
                                                  <div>
                                                    <div
                                                      aria-activedescendant="2"
                                                      class="ouiSplitButton__listbox"
                                                      role="listbox"
                                                      tabindex="0"
                                                    >
                                                      <a
                                                        aria-selected="false"
                                                        class="ouiContextMenuItem ouiSplitButton__item"
                                                        color="primary"
                                                        href="#"
                                                        id="splitButtonItem_0"
                                                        rel="noreferrer"
                                                        role="option"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__itemLayout"
                                                        >
                                                          <span
                                                            class="ouiContextMenu__icon"
                                                            color="inherit"
                                                            data-ouiicon-type="empty"
                                                          />
                                                          <span
                                                            class="ouiContextMenuItem__text"
                                                          >
                                                            <div
                                                              class="ouiText ouiText--medium"
                                                            >
                                                              <div
                                                                class="ouiTextAlign ouiTextAlign--center"
                                                              >
                                                                Option #1
                                                              </div>
                                                            </div>
                                                          </span>
                                                        </span>
                                                      </a>
                                                      <button
                                                        aria-selected="false"
                                                        class="ouiContextMenuItem ouiSplitButton__item"
                                                        color="primary"
                                                        id="splitButtonItem_1"
                                                        role="option"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__itemLayout"
                                                        >
                                                          <span
                                                            class="ouiContextMenu__icon"
                                                            color="inherit"
                                                            data-ouiicon-type="empty"
                                                          />
                                                          <span
                                                            class="ouiContextMenuItem__text"
                                                          >
                                                            <div
                                                              class="ouiText ouiText--medium"
                                                            >
                                                              <div
                                                                class="ouiTextAlign ouiTextAlign--center"
                                                              >
                                                                Option #2
                                                              </div>
                                                            </div>
                                                          </span>
                                                        </span>
                                                      </button>
                                                      <button
                                                        aria-selected="true"
                                                        class="ouiContextMenuItem ouiSplitButton__item"
                                                        color="primary"
                                                        id="splitButtonItem_2"
                                                        role="option"
                                                        type="button"
                                                      >
                                                        <span
                                                          class="ouiContextMenu__itemLayout"
                                                        >
                                                          <span
                                                            class="ouiContextMenu__icon"
                                                            color="inherit"
                                                            data-ouiicon-type="check"
                                                          />
                                                          <span
                                                            class="ouiContextMenuItem__text"
                                                          >
                                                            <div
                                                              class="ouiText ouiText--medium"
                                                            >
                                                              <div
                                                                class="ouiTextAlign ouiTextAlign--center"
                                                              >
                                                                Option #3
                                                              </div>
                                                            </div>
                                                          </span>
                                                        </span>
                                                      </button>
                                                    </div>
                                                  </div>
                                                </div>
                                              }
                                              onActivation={[Function]}
                                              onDeactivation={[Function]}
                                              persistentFocus={false}
                                              returnFocus={[Function]}
                                              shards={Array []}
                                            />
                                          </SideEffect(FocusWatcher)>
                                        </SideCar>
                                      </RequireSideCar>
                                      <ForwardRef
                                        data-focus-lock-disabled={false}
                                        enabled={false}
                                        inert={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        onMouseDown={[Function]}
                                        onTouchStart={[Function]}
                                        removeScrollBar={true}
                                        sideCar={[Function]}
                                      >
                                        <div
                                          data-focus-lock-disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          onMouseDown={[Function]}
                                          onScrollCapture={[Function]}
                                          onTouchMoveCapture={[Function]}
                                          onTouchStart={[Function]}
                                          onWheelCapture={[Function]}
                                        >
                                          <div
                                            onKeyDown={[Function]}
                                          >
                                            <div
                                              aria-activedescendant="2"
                                              className="ouiSplitButton__listbox"
                                              role="listbox"
                                              tabIndex={0}
                                            >
                                              <OuiContextMenuItem
                                                aria-selected="false"
                                                buttonRef={[Function]}
                                                className="ouiSplitButton__item"
                                                color="primary"
                                                href="#"
                                                icon="empty"
                                                id="splitButtonItem_0"
                                                key="optionItem_0"
                                                layoutAlign="center"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="option"
                                              >
                                                <a
                                                  aria-selected="false"
                                                  className="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  href="#"
                                                  id="splitButtonItem_0"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  rel="noreferrer"
                                                  role="option"
                                                >
                                                  <span
                                                    className="ouiContextMenu__itemLayout"
                                                  >
                                                    <OuiIcon
                                                      className="ouiContextMenu__icon"
                                                      color="inherit"
                                                      size="m"
                                                      type="empty"
                                                    >
                                                      <span
                                                        className="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="empty"
                                                        size="m"
                                                      />
                                                    </OuiIcon>
                                                    <span
                                                      className="ouiContextMenuItem__text"
                                                    >
                                                      <OuiText
                                                        textAlign="center"
                                                      >
                                                        <div
                                                          className="ouiText ouiText--medium"
                                                        >
                                                          <OuiTextAlign
                                                            textAlign="center"
                                                          >
                                                            <div
                                                              className="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #1
                                                            </div>
                                                          </OuiTextAlign>
                                                        </div>
                                                      </OuiText>
                                                    </span>
                                                  </span>
                                                </a>
                                              </OuiContextMenuItem>
                                              <OuiContextMenuItem
                                                aria-selected="false"
                                                buttonRef={[Function]}
                                                className="ouiSplitButton__item"
                                                color="primary"
                                                icon="empty"
                                                id="splitButtonItem_1"
                                                key="optionItem_1"
                                                layoutAlign="center"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="option"
                                              >
                                                <button
                                                  aria-selected="false"
                                                  className="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  disabled={false}
                                                  id="splitButtonItem_1"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="option"
                                                  type="button"
                                                >
                                                  <span
                                                    className="ouiContextMenu__itemLayout"
                                                  >
                                                    <OuiIcon
                                                      className="ouiContextMenu__icon"
                                                      color="inherit"
                                                      size="m"
                                                      type="empty"
                                                    >
                                                      <span
                                                        className="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="empty"
                                                        size="m"
                                                      />
                                                    </OuiIcon>
                                                    <span
                                                      className="ouiContextMenuItem__text"
                                                    >
                                                      <OuiText
                                                        textAlign="center"
                                                      >
                                                        <div
                                                          className="ouiText ouiText--medium"
                                                        >
                                                          <OuiTextAlign
                                                            textAlign="center"
                                                          >
                                                            <div
                                                              className="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #2
                                                            </div>
                                                          </OuiTextAlign>
                                                        </div>
                                                      </OuiText>
                                                    </span>
                                                  </span>
                                                </button>
                                              </OuiContextMenuItem>
                                              <OuiContextMenuItem
                                                aria-selected="true"
                                                buttonRef={[Function]}
                                                className="ouiSplitButton__item"
                                                color="primary"
                                                icon="check"
                                                id="splitButtonItem_2"
                                                key="optionItem_2"
                                                layoutAlign="center"
                                                onClick={[Function]}
                                                onKeyDown={[Function]}
                                                role="option"
                                              >
                                                <button
                                                  aria-selected="true"
                                                  className="ouiContextMenuItem ouiSplitButton__item"
                                                  color="primary"
                                                  disabled={false}
                                                  id="splitButtonItem_2"
                                                  onClick={[Function]}
                                                  onKeyDown={[Function]}
                                                  role="option"
                                                  type="button"
                                                >
                                                  <span
                                                    className="ouiContextMenu__itemLayout"
                                                  >
                                                    <OuiIcon
                                                      className="ouiContextMenu__icon"
                                                      color="inherit"
                                                      size="m"
                                                      type="check"
                                                    >
                                                      <span
                                                        className="ouiContextMenu__icon"
                                                        color="inherit"
                                                        data-ouiicon-type="check"
                                                        size="m"
                                                      />
                                                    </OuiIcon>
                                                    <span
                                                      className="ouiContextMenuItem__text"
                                                    >
                                                      <OuiText
                                                        textAlign="center"
                                                      >
                                                        <div
                                                          className="ouiText ouiText--medium"
                                                        >
                                                          <OuiTextAlign
                                                            textAlign="center"
                                                          >
                                                            <div
                                                              className="ouiTextAlign ouiTextAlign--center"
                                                            >
                                                              Option #3
                                                            </div>
                                                          </OuiTextAlign>
                                                        </div>
                                                      </OuiText>
                                                    </span>
                                                  </span>
                                                </button>
                                              </OuiContextMenuItem>
                                            </div>
                                          </div>
                                        </div>
                                      </ForwardRef>
                                      <div
                                        data-focus-guard={true}
                                        style={
                                          Object {
                                            "height": "0px",
                                            "left": "1px",
                                            "overflow": "hidden",
                                            "padding": 0,
                                            "position": "fixed",
                                            "top": "1px",
                                            "width": "1px",
                                          }
                                        }
                                        tabIndex={0}
                                      />
                                    </ForwardRef>
                                    <RequireSideCar
                                      noIsolation={true}
                                      onClickOutside={[Function]}
                                      setLockProps={[Function]}
                                      sideCar={
                                        Object {
                                          "assignMedium": [Function],
                                          "assignSyncMedium": [Function],
                                          "options": Object {
                                            "async": true,
                                            "ssr": false,
                                          },
                                          "read": [Function],
                                          "useMedium": [Function],
                                        }
                                      }
                                    >
                                      <SideCar
                                        noIsolation={true}
                                        onClickOutside={[Function]}
                                        setLockProps={[Function]}
                                        sideCar={
                                          Object {
                                            "assignMedium": [Function],
                                            "assignSyncMedium": [Function],
                                            "options": Object {
                                              "async": true,
                                              "ssr": false,
                                            },
                                            "read": [Function],
                                            "useMedium": [Function],
                                          }
                                        }
                                      >
                                        <Effect
                                          noIsolation={true}
                                          onClickOutside={[Function]}
                                          setLockProps={[Function]}
                                        >
                                          <Component>
                                            <Sheet
                                              styles="
 [data-focus-on-hidden] {
   pointer-events: none !important;
 }
"
                                            />
                                          </Component>
                                        </Effect>
                                      </SideCar>
                                    </RequireSideCar>
                                  </ForwardRef>
                                </ForwardRef>
                              </OuiFocusTrap>
                            </div>
                          </OuiMutationObserver>
                        </div>
                      </OuiPanel>
                    </div>
                  </ForwardRef>
                  <div
                    data-focus-guard={true}
                    style={
                      Object {
                        "height": "0px",
                        "left": "1px",
                        "overflow": "hidden",
                        "padding": 0,
                        "position": "fixed",
                        "top": "1px",
                        "width": "1px",
                      }
                    }
                    tabIndex={-1}
                  />
                </ForwardRef>
              </ForwardRef>
            </ForwardRef>
          </OuiFocusTrap>
        </OuiPortal>
      </div>
    </OuiOutsideClickDetector>
  </OuiPopover>
</OuiSplitButton>
`;

exports[`OuiSplitButton props fullWidth is rendered 1`] = `
<div
  class="ouiPopover ouiPopover--anchorDownRight ouiSplitButton"
>
  <div
    class="ouiPopover__anchor"
  >
    <div
      class="ouiSplitButtonControl ouiSplitButtonColor--primary"
    >
      <button
        class="ouiButton ouiButton--primary ouiButton--fullWidth ouiSplitButtonControl ouiSplitButtonControl--primary ouiSplitButtonHairline--primary"
        data-test-subj="splitButton--primary"
        type="button"
      >
        <span
          class="ouiButtonContent ouiButton__content"
        >
          <span
            class="ouiButton__text"
          >
            Test
          </span>
        </span>
      </button>
      <button
        aria-label="Open Selections"
        class="ouiButtonIcon ouiButtonIcon--primary ouiButtonIcon--medium ouiSplitButtonControl--dropdown"
        data-test-subj="splitButton--dropdown"
        type="button"
      >
        <span
          aria-hidden="true"
          class="ouiButtonIcon__icon"
          color="inherit"
          data-ouiicon-type="arrowDown"
        />
      </button>
    </div>
  </div>
</div>
`;
