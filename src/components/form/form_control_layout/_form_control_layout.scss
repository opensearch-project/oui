/*!
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 */

.ouiFormControlLayout {
  // Let the height expand as needed
  @include ouiFormControlSize($includeAlternates: true);
}

.ouiFormControlLayout__childrenWrapper {
  position: relative;
}

/**
 * 1. Account for inner box-shadow style border
 * 2. Ensure truncation works in children elements
 */

.ouiFormControlLayout--group {
  // Match just the regular drop shadow of inputs
  @include ouiFormControlDefaultShadow;
  display: flex;
  align-items: stretch;
  padding: 1px; /* 1 */

  // Force the stretch of any children so they expand the full height of the control
  > *,
  .ouiPopover__anchor,
  .ouiButtonEmpty,
  .ouiText,
  .ouiFormLabel,
  .ouiButtonIcon {
    height: 100%;
  }

  .ouiFormControlLayout__childrenWrapper {
    flex-grow: 1;
    overflow: hidden; /* 2 */
  }

  .ouiFormControlLayout__prepend,
  .ouiFormControlLayout__append {
    @include ouiTextTruncate;
    flex-shrink: 0;
    height: 100%;
    border-radius: 0;

    // ICONS

    &.ouiIcon,
    .ouiIcon {
      padding: 0 $ouiSizeS;
      width: $ouiSizeXL;
      border-radius: 0;
      background-color: $ouiFormInputGroupLabelBackground;
    }


    &.ouiButtonIcon,
    &.ouiButtonEmpty,
    .ouiButtonIcon,
    .ouiButtonEmpty {
      transform: none !important;

      // Undo sizing from icons inside buttons
      .ouiIcon {
        background: none !important;
        padding: 0;
        width: $ouiSize;
      }
    }
  }

  .ouiButtonIcon {
    padding: 0 $ouiSizeS;
    width: $ouiSizeXL;
    border-radius: 0;

    &:not(:focus) {
      background-color: $ouiFormInputGroupLabelBackground;
    }

    &:focus-visible {
      outline: 2px solid $ouiFocusRingColor;
      outline-offset: -2px;
    }
  }

  .ouiToolTipAnchor > .ouiIcon {
    height: 100%;
    background-color: $ouiFormInputGroupLabelBackground;
    padding: 0 $ouiSizeS;
    width: $ouiSizeXL;
    border-radius: 0;
  }

  > .ouiFormControlLayout__prepend,
  > .ouiFormControlLayout__append {
    max-width: 50%; // Make sure max-width only applies to the outer most append/prepend element
  }

  // sass-lint:disable-block no-important
  // This is the only way to target specific components to override styling

  // TEXT

  .ouiFormLabel,
  .ouiText {
    background-color: $ouiFormInputGroupLabelBackground;
    padding: $ouiFormControlPadding;
    line-height: $ouiSize !important;
    cursor: default !important; // pointer cursor on some form labels but not others is confusing

    // If the next sibling is not the input, pull it closer to the text to reduce space
    + *:not(.ouiFormControlLayout__childrenWrapper):not(input) {
      margin-left: -$ouiFormControlPadding;
    }
  }

  // If any child that is not the input has a next sibling that is text, pull it closer to the text to reduce space
  > *:not(.ouiFormControlLayout__childrenWrapper) {
    + .ouiFormLabel,
    + .ouiText {
      margin-left: -$ouiFormControlPadding;
    }
  }

  //
  // BORDERS on buttons only

  .ouiButtonEmpty {
    border-right: $ouiFormInputGroupBorder;
  }

  // Any buttons after the children wrapper or inside any elements after the children wrapper
  // Need to swap border sides
  .ouiFormControlLayout__childrenWrapper ~ .ouiButtonEmpty,
  .ouiFormControlLayout__childrenWrapper ~ * .ouiButtonEmpty {
    border-right: none;
    border-left: $ouiFormInputGroupBorder;
  }

  //
  // Compressed alterations

  &.ouiFormControlLayout--compressed {
    @include ouiFormControlDefaultShadow($borderOnly: true);
    border-radius: calc($ouiBorderRadius / 2);
    overflow: hidden; // Keeps backgrounds inside border radius

    // Padding
    .ouiFormLabel,
    .ouiText {
      padding: $ouiFormControlCompressedPadding;

      // If the next sibling is not the input, pull it closer to the text to reduce space
      + *:not(.ouiFormControlLayout__childrenWrapper) {
        margin-left: -$ouiFormControlCompressedPadding;
      }
    }

    // If any child that is not the input has a next sibling that is text, pull it closer to the text to reduce space
    > *:not(.ouiFormControlLayout__childrenWrapper) {
      + .ouiFormLabel,
      + .ouiText {
        margin-left: -$ouiFormControlCompressedPadding;
      }
    }
  }

  //
  // ReadOnly alterations
  &.ouiFormControlLayout--readOnly {
    @include ouiFormControlReadOnlyStyle;

    input {
      background-color: transparent; // Ensures the input and layout don't double up on background color
    }
  }
}
